/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 4);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/object-hash/dist/object_hash.js":
/*!******************************************************!*\
  !*** ./node_modules/object-hash/dist/object_hash.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var require;var require;!function(e){if(true)module.exports=e();else { var t; }}(function(){return function o(i,u,a){function f(n,e){if(!u[n]){if(!i[n]){var t="function"==typeof require&&require;if(!e&&t)return require(n,!0);if(s)return s(n,!0);throw new Error("Cannot find module '"+n+"'")}var r=u[n]={exports:{}};i[n][0].call(r.exports,function(e){var t=i[n][1][e];return f(t||e)},r,r.exports,o,i,u,a)}return u[n].exports}for(var s="function"==typeof require&&require,e=0;e<a.length;e++)f(a[e]);return f}({1:[function(w,b,m){(function(e,t,s,n,r,o,i,u,a){"use strict";var f=w("crypto");function c(e,t){return function(e,t){var n;n="passthrough"!==t.algorithm?f.createHash(t.algorithm):new y;void 0===n.write&&(n.write=n.update,n.end=n.update);g(t,n).dispatch(e),n.update||n.end("");if(n.digest)return n.digest("buffer"===t.encoding?void 0:t.encoding);var r=n.read();return"buffer"!==t.encoding?r.toString(t.encoding):r}(e,t=h(e,t))}(m=b.exports=c).sha1=function(e){return c(e)},m.keys=function(e){return c(e,{excludeValues:!0,algorithm:"sha1",encoding:"hex"})},m.MD5=function(e){return c(e,{algorithm:"md5",encoding:"hex"})},m.keysMD5=function(e){return c(e,{algorithm:"md5",encoding:"hex",excludeValues:!0})};var l=f.getHashes?f.getHashes().slice():["sha1","md5"];l.push("passthrough");var d=["buffer","hex","binary","base64"];function h(e,t){t=t||{};var n={};if(n.algorithm=t.algorithm||"sha1",n.encoding=t.encoding||"hex",n.excludeValues=!!t.excludeValues,n.algorithm=n.algorithm.toLowerCase(),n.encoding=n.encoding.toLowerCase(),n.ignoreUnknown=!0===t.ignoreUnknown,n.respectType=!1!==t.respectType,n.respectFunctionNames=!1!==t.respectFunctionNames,n.respectFunctionProperties=!1!==t.respectFunctionProperties,n.unorderedArrays=!0===t.unorderedArrays,n.unorderedSets=!1!==t.unorderedSets,n.unorderedObjects=!1!==t.unorderedObjects,n.replacer=t.replacer||void 0,n.excludeKeys=t.excludeKeys||void 0,void 0===e)throw new Error("Object argument required.");for(var r=0;r<l.length;++r)l[r].toLowerCase()===n.algorithm.toLowerCase()&&(n.algorithm=l[r]);if(-1===l.indexOf(n.algorithm))throw new Error('Algorithm "'+n.algorithm+'"  not supported. supported values: '+l.join(", "));if(-1===d.indexOf(n.encoding)&&"passthrough"!==n.algorithm)throw new Error('Encoding "'+n.encoding+'"  not supported. supported values: '+d.join(", "));return n}function p(e){if("function"!=typeof e)return!1;return null!=/^function\s+\w*\s*\(\s*\)\s*{\s+\[native code\]\s+}$/i.exec(Function.prototype.toString.call(e))}function g(u,t,a){a=a||[];function f(e){return t.update?t.update(e,"utf8"):t.write(e,"utf8")}return{dispatch:function(e){u.replacer&&(e=u.replacer(e));var t=typeof e;return null===e&&(t="null"),this["_"+t](e)},_object:function(t){var e=Object.prototype.toString.call(t),n=/\[object (.*)\]/i.exec(e);n=(n=n?n[1]:"unknown:["+e+"]").toLowerCase();var r;if(0<=(r=a.indexOf(t)))return this.dispatch("[CIRCULAR:"+r+"]");if(a.push(t),void 0!==s&&s.isBuffer&&s.isBuffer(t))return f("buffer:"),f(t);if("object"===n||"function"===n){var o=Object.keys(t);u.unorderedObjects&&(o=o.sort()),!1===u.respectType||p(t)||o.splice(0,0,"prototype","__proto__","constructor"),u.excludeKeys&&(o=o.filter(function(e){return!u.excludeKeys(e)})),f("object:"+o.length+":");var i=this;return o.forEach(function(e){i.dispatch(e),f(":"),u.excludeValues||i.dispatch(t[e]),f(",")})}if(!this["_"+n]){if(u.ignoreUnknown)return f("["+n+"]");throw new Error('Unknown object type "'+n+'"')}this["_"+n](t)},_array:function(e,t){t=void 0!==t?t:!1!==u.unorderedArrays;var n=this;if(f("array:"+e.length+":"),!t||e.length<=1)return e.forEach(function(e){return n.dispatch(e)});var r=[],o=e.map(function(e){var t=new y,n=a.slice();return g(u,t,n).dispatch(e),r=r.concat(n.slice(a.length)),t.read().toString()});return a=a.concat(r),o.sort(),this._array(o,!1)},_date:function(e){return f("date:"+e.toJSON())},_symbol:function(e){return f("symbol:"+e.toString())},_error:function(e){return f("error:"+e.toString())},_boolean:function(e){return f("bool:"+e.toString())},_string:function(e){f("string:"+e.length+":"),f(e.toString())},_function:function(e){f("fn:"),p(e)?this.dispatch("[native]"):this.dispatch(e.toString()),!1!==u.respectFunctionNames&&this.dispatch("function-name:"+String(e.name)),u.respectFunctionProperties&&this._object(e)},_number:function(e){return f("number:"+e.toString())},_xml:function(e){return f("xml:"+e.toString())},_null:function(){return f("Null")},_undefined:function(){return f("Undefined")},_regexp:function(e){return f("regex:"+e.toString())},_uint8array:function(e){return f("uint8array:"),this.dispatch(Array.prototype.slice.call(e))},_uint8clampedarray:function(e){return f("uint8clampedarray:"),this.dispatch(Array.prototype.slice.call(e))},_int8array:function(e){return f("uint8array:"),this.dispatch(Array.prototype.slice.call(e))},_uint16array:function(e){return f("uint16array:"),this.dispatch(Array.prototype.slice.call(e))},_int16array:function(e){return f("uint16array:"),this.dispatch(Array.prototype.slice.call(e))},_uint32array:function(e){return f("uint32array:"),this.dispatch(Array.prototype.slice.call(e))},_int32array:function(e){return f("uint32array:"),this.dispatch(Array.prototype.slice.call(e))},_float32array:function(e){return f("float32array:"),this.dispatch(Array.prototype.slice.call(e))},_float64array:function(e){return f("float64array:"),this.dispatch(Array.prototype.slice.call(e))},_arraybuffer:function(e){return f("arraybuffer:"),this.dispatch(new Uint8Array(e))},_url:function(e){return f("url:"+e.toString())},_map:function(e){f("map:");var t=Array.from(e);return this._array(t,!1!==u.unorderedSets)},_set:function(e){f("set:");var t=Array.from(e);return this._array(t,!1!==u.unorderedSets)},_blob:function(){if(u.ignoreUnknown)return f("[blob]");throw Error('Hashing Blob objects is currently not supported\n(see https://github.com/puleos/object-hash/issues/26)\nUse "options.replacer" or "options.ignoreUnknown"\n')},_domwindow:function(){return f("domwindow")},_process:function(){return f("process")},_timer:function(){return f("timer")},_pipe:function(){return f("pipe")},_tcp:function(){return f("tcp")},_udp:function(){return f("udp")},_tty:function(){return f("tty")},_statwatcher:function(){return f("statwatcher")},_securecontext:function(){return f("securecontext")},_connection:function(){return f("connection")},_zlib:function(){return f("zlib")},_context:function(){return f("context")},_nodescript:function(){return f("nodescript")},_httpparser:function(){return f("httpparser")},_dataview:function(){return f("dataview")},_signal:function(){return f("signal")},_fsevent:function(){return f("fsevent")},_tlswrap:function(){return f("tlswrap")}}}function y(){return{buf:"",write:function(e){this.buf+=e},end:function(e){this.buf+=e},read:function(){return this.buf}}}m.writeToStream=function(e,t,n){return void 0===n&&(n=t,t={}),g(t=h(e,t),n).dispatch(e)}}).call(this,w("lYpoI2"),"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},w("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/fake_8fc94e7b.js","/")},{buffer:3,crypto:5,lYpoI2:10}],2:[function(e,t,s){(function(e,t,n,r,o,i,u,a,f){!function(e){"use strict";var s="undefined"!=typeof Uint8Array?Uint8Array:Array,n="+".charCodeAt(0),r="/".charCodeAt(0),o="0".charCodeAt(0),i="a".charCodeAt(0),u="A".charCodeAt(0),a="-".charCodeAt(0),f="_".charCodeAt(0);function c(e){var t=e.charCodeAt(0);return t===n||t===a?62:t===r||t===f?63:t<o?-1:t<o+10?t-o+26+26:t<u+26?t-u:t<i+26?t-i+26:void 0}e.toByteArray=function(e){var t,n,r,o,i;if(0<e.length%4)throw new Error("Invalid string. Length must be a multiple of 4");var u=e.length;o="="===e.charAt(u-2)?2:"="===e.charAt(u-1)?1:0,i=new s(3*e.length/4-o),n=0<o?e.length-4:e.length;var a=0;function f(e){i[a++]=e}for(t=0;t<n;t+=4,3)f((16711680&(r=c(e.charAt(t))<<18|c(e.charAt(t+1))<<12|c(e.charAt(t+2))<<6|c(e.charAt(t+3))))>>16),f((65280&r)>>8),f(255&r);return 2==o?f(255&(r=c(e.charAt(t))<<2|c(e.charAt(t+1))>>4)):1==o&&(f((r=c(e.charAt(t))<<10|c(e.charAt(t+1))<<4|c(e.charAt(t+2))>>2)>>8&255),f(255&r)),i},e.fromByteArray=function(e){var t,n,r,o,i=e.length%3,u="";function a(e){return"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(e)}for(t=0,r=e.length-i;t<r;t+=3)n=(e[t]<<16)+(e[t+1]<<8)+e[t+2],u+=a((o=n)>>18&63)+a(o>>12&63)+a(o>>6&63)+a(63&o);switch(i){case 1:u+=a((n=e[e.length-1])>>2),u+=a(n<<4&63),u+="==";break;case 2:u+=a((n=(e[e.length-2]<<8)+e[e.length-1])>>10),u+=a(n>>4&63),u+=a(n<<2&63),u+="="}return u}}(void 0===s?this.base64js={}:s)}).call(this,e("lYpoI2"),"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},e("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/base64-js/lib/b64.js","/node_modules/gulp-browserify/node_modules/base64-js/lib")},{buffer:3,lYpoI2:10}],3:[function(D,e,O){(function(e,t,f,n,r,o,i,u,a){var s=D("base64-js"),c=D("ieee754");function f(e,t,n){if(!(this instanceof f))return new f(e,t,n);var r,o,i,u=typeof e;if("base64"===t&&"string"==u)for(e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e);e.length%4!=0;)e+="=";if("number"==u)r=U(e);else if("string"==u)r=f.byteLength(e,t);else{if("object"!=u)throw new Error("First argument needs to be a number, array or string.");r=U(e.length)}if(f._useTypedArrays?o=f._augment(new Uint8Array(r)):((o=this).length=r,o._isBuffer=!0),f._useTypedArrays&&"number"==typeof e.byteLength)o._set(e);else if(function(e){return x(e)||f.isBuffer(e)||e&&"object"==typeof e&&"number"==typeof e.length}(e))for(i=0;i<r;i++)f.isBuffer(e)?o[i]=e.readUInt8(i):o[i]=e[i];else if("string"==u)o.write(e,0,t);else if("number"==u&&!f._useTypedArrays&&!n)for(i=0;i<r;i++)o[i]=0;return o}function l(e,t,n,r){return f._charsWritten=k(function(e){for(var t=[],n=0;n<e.length;n++)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function d(e,t,n){var r="";n=Math.min(e.length,n);for(var o=t;o<n;o++)r+=String.fromCharCode(e[o]);return r}function h(e,t,n,r){r||(F("boolean"==typeof n,"missing or invalid endian"),F(null!=t,"missing offset"),F(t+1<e.length,"Trying to read beyond buffer length"));var o,i=e.length;if(!(i<=t))return n?(o=e[t],t+1<i&&(o|=e[t+1]<<8)):(o=e[t]<<8,t+1<i&&(o|=e[t+1])),o}function p(e,t,n,r){r||(F("boolean"==typeof n,"missing or invalid endian"),F(null!=t,"missing offset"),F(t+3<e.length,"Trying to read beyond buffer length"));var o,i=e.length;if(!(i<=t))return n?(t+2<i&&(o=e[t+2]<<16),t+1<i&&(o|=e[t+1]<<8),o|=e[t],t+3<i&&(o+=e[t+3]<<24>>>0)):(t+1<i&&(o=e[t+1]<<16),t+2<i&&(o|=e[t+2]<<8),t+3<i&&(o|=e[t+3]),o+=e[t]<<24>>>0),o}function g(e,t,n,r){if(r||(F("boolean"==typeof n,"missing or invalid endian"),F(null!=t,"missing offset"),F(t+1<e.length,"Trying to read beyond buffer length")),!(e.length<=t)){var o=h(e,t,n,!0);return 32768&o?-1*(65535-o+1):o}}function y(e,t,n,r){if(r||(F("boolean"==typeof n,"missing or invalid endian"),F(null!=t,"missing offset"),F(t+3<e.length,"Trying to read beyond buffer length")),!(e.length<=t)){var o=p(e,t,n,!0);return 2147483648&o?-1*(4294967295-o+1):o}}function w(e,t,n,r){return r||(F("boolean"==typeof n,"missing or invalid endian"),F(t+3<e.length,"Trying to read beyond buffer length")),c.read(e,t,n,23,4)}function b(e,t,n,r){return r||(F("boolean"==typeof n,"missing or invalid endian"),F(t+7<e.length,"Trying to read beyond buffer length")),c.read(e,t,n,52,8)}function m(e,t,n,r,o){o||(F(null!=t,"missing value"),F("boolean"==typeof r,"missing or invalid endian"),F(null!=n,"missing offset"),F(n+1<e.length,"trying to write beyond buffer length"),M(t,65535));var i=e.length;if(!(i<=n))for(var u=0,a=Math.min(i-n,2);u<a;u++)e[n+u]=(t&255<<8*(r?u:1-u))>>>8*(r?u:1-u)}function v(e,t,n,r,o){o||(F(null!=t,"missing value"),F("boolean"==typeof r,"missing or invalid endian"),F(null!=n,"missing offset"),F(n+3<e.length,"trying to write beyond buffer length"),M(t,4294967295));var i=e.length;if(!(i<=n))for(var u=0,a=Math.min(i-n,4);u<a;u++)e[n+u]=t>>>8*(r?u:3-u)&255}function _(e,t,n,r,o){o||(F(null!=t,"missing value"),F("boolean"==typeof r,"missing or invalid endian"),F(null!=n,"missing offset"),F(n+1<e.length,"Trying to write beyond buffer length"),N(t,32767,-32768)),e.length<=n||m(e,0<=t?t:65535+t+1,n,r,o)}function E(e,t,n,r,o){o||(F(null!=t,"missing value"),F("boolean"==typeof r,"missing or invalid endian"),F(null!=n,"missing offset"),F(n+3<e.length,"Trying to write beyond buffer length"),N(t,2147483647,-2147483648)),e.length<=n||v(e,0<=t?t:4294967295+t+1,n,r,o)}function I(e,t,n,r,o){o||(F(null!=t,"missing value"),F("boolean"==typeof r,"missing or invalid endian"),F(null!=n,"missing offset"),F(n+3<e.length,"Trying to write beyond buffer length"),Y(t,34028234663852886e22,-34028234663852886e22)),e.length<=n||c.write(e,t,n,r,23,4)}function A(e,t,n,r,o){o||(F(null!=t,"missing value"),F("boolean"==typeof r,"missing or invalid endian"),F(null!=n,"missing offset"),F(n+7<e.length,"Trying to write beyond buffer length"),Y(t,17976931348623157e292,-17976931348623157e292)),e.length<=n||c.write(e,t,n,r,52,8)}O.Buffer=f,O.SlowBuffer=f,O.INSPECT_MAX_BYTES=50,f.poolSize=8192,f._useTypedArrays=function(){try{var e=new ArrayBuffer(0),t=new Uint8Array(e);return t.foo=function(){return 42},42===t.foo()&&"function"==typeof t.subarray}catch(e){return!1}}(),f.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"raw":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},f.isBuffer=function(e){return!(null==e||!e._isBuffer)},f.byteLength=function(e,t){var n;switch(e+="",t||"utf8"){case"hex":n=e.length/2;break;case"utf8":case"utf-8":n=j(e).length;break;case"ascii":case"binary":case"raw":n=e.length;break;case"base64":n=C(e).length;break;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":n=2*e.length;break;default:throw new Error("Unknown encoding")}return n},f.concat=function(e,t){if(F(x(e),"Usage: Buffer.concat(list, [totalLength])\nlist should be an Array."),0===e.length)return new f(0);if(1===e.length)return e[0];var n;if("number"!=typeof t)for(n=t=0;n<e.length;n++)t+=e[n].length;var r=new f(t),o=0;for(n=0;n<e.length;n++){var i=e[n];i.copy(r,o),o+=i.length}return r},f.prototype.write=function(e,t,n,r){if(isFinite(t))isFinite(n)||(r=n,n=void 0);else{var o=r;r=t,t=n,n=o}t=Number(t)||0;var i,u=this.length-t;switch(n?u<(n=Number(n))&&(n=u):n=u,r=String(r||"utf8").toLowerCase()){case"hex":i=function(e,t,n,r){n=Number(n)||0;var o=e.length-n;r?o<(r=Number(r))&&(r=o):r=o;var i=t.length;F(i%2==0,"Invalid hex string"),i/2<r&&(r=i/2);for(var u=0;u<r;u++){var a=parseInt(t.substr(2*u,2),16);F(!isNaN(a),"Invalid hex string"),e[n+u]=a}return f._charsWritten=2*u,u}(this,e,t,n);break;case"utf8":case"utf-8":i=function(e,t,n,r){return f._charsWritten=k(j(t),e,n,r)}(this,e,t,n);break;case"ascii":i=l(this,e,t,n);break;case"binary":i=function(e,t,n,r){return l(e,t,n,r)}(this,e,t,n);break;case"base64":i=function(e,t,n,r){return f._charsWritten=k(C(t),e,n,r)}(this,e,t,n);break;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":i=function(e,t,n,r){return f._charsWritten=k(function(e){for(var t,n,r,o=[],i=0;i<e.length;i++)t=e.charCodeAt(i),n=t>>8,r=t%256,o.push(r),o.push(n);return o}(t),e,n,r)}(this,e,t,n);break;default:throw new Error("Unknown encoding")}return i},f.prototype.toString=function(e,t,n){var r,o=this;if(e=String(e||"utf8").toLowerCase(),t=Number(t)||0,(n=void 0!==n?Number(n):n=o.length)===t)return"";switch(e){case"hex":r=function(e,t,n){var r=e.length;(!t||t<0)&&(t=0);(!n||n<0||r<n)&&(n=r);for(var o="",i=t;i<n;i++)o+=S(e[i]);return o}(o,t,n);break;case"utf8":case"utf-8":r=function(e,t,n){var r="",o="";n=Math.min(e.length,n);for(var i=t;i<n;i++)e[i]<=127?(r+=T(o)+String.fromCharCode(e[i]),o=""):o+="%"+e[i].toString(16);return r+T(o)}(o,t,n);break;case"ascii":r=d(o,t,n);break;case"binary":r=function(e,t,n){return d(e,t,n)}(o,t,n);break;case"base64":r=function(e,t,n){return 0===t&&n===e.length?s.fromByteArray(e):s.fromByteArray(e.slice(t,n))}(o,t,n);break;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":r=function(e,t,n){for(var r=e.slice(t,n),o="",i=0;i<r.length;i+=2)o+=String.fromCharCode(r[i]+256*r[i+1]);return o}(o,t,n);break;default:throw new Error("Unknown encoding")}return r},f.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},f.prototype.copy=function(e,t,n,r){if(n=n||0,r||0===r||(r=this.length),t=t||0,r!==n&&0!==e.length&&0!==this.length){F(n<=r,"sourceEnd < sourceStart"),F(0<=t&&t<e.length,"targetStart out of bounds"),F(0<=n&&n<this.length,"sourceStart out of bounds"),F(0<=r&&r<=this.length,"sourceEnd out of bounds"),r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var o=r-n;if(o<100||!f._useTypedArrays)for(var i=0;i<o;i++)e[i+t]=this[i+n];else e._set(this.subarray(n,n+o),t)}},f.prototype.slice=function(e,t){var n=this.length;if(e=L(e,n,0),t=L(t,n,n),f._useTypedArrays)return f._augment(this.subarray(e,t));for(var r=t-e,o=new f(r,void 0,!0),i=0;i<r;i++)o[i]=this[i+e];return o},f.prototype.get=function(e){return console.log(".get() is deprecated. Access using array indexes instead."),this.readUInt8(e)},f.prototype.set=function(e,t){return console.log(".set() is deprecated. Access using array indexes instead."),this.writeUInt8(e,t)},f.prototype.readUInt8=function(e,t){if(t||(F(null!=e,"missing offset"),F(e<this.length,"Trying to read beyond buffer length")),!(e>=this.length))return this[e]},f.prototype.readUInt16LE=function(e,t){return h(this,e,!0,t)},f.prototype.readUInt16BE=function(e,t){return h(this,e,!1,t)},f.prototype.readUInt32LE=function(e,t){return p(this,e,!0,t)},f.prototype.readUInt32BE=function(e,t){return p(this,e,!1,t)},f.prototype.readInt8=function(e,t){if(t||(F(null!=e,"missing offset"),F(e<this.length,"Trying to read beyond buffer length")),!(e>=this.length))return 128&this[e]?-1*(255-this[e]+1):this[e]},f.prototype.readInt16LE=function(e,t){return g(this,e,!0,t)},f.prototype.readInt16BE=function(e,t){return g(this,e,!1,t)},f.prototype.readInt32LE=function(e,t){return y(this,e,!0,t)},f.prototype.readInt32BE=function(e,t){return y(this,e,!1,t)},f.prototype.readFloatLE=function(e,t){return w(this,e,!0,t)},f.prototype.readFloatBE=function(e,t){return w(this,e,!1,t)},f.prototype.readDoubleLE=function(e,t){return b(this,e,!0,t)},f.prototype.readDoubleBE=function(e,t){return b(this,e,!1,t)},f.prototype.writeUInt8=function(e,t,n){n||(F(null!=e,"missing value"),F(null!=t,"missing offset"),F(t<this.length,"trying to write beyond buffer length"),M(e,255)),t>=this.length||(this[t]=e)},f.prototype.writeUInt16LE=function(e,t,n){m(this,e,t,!0,n)},f.prototype.writeUInt16BE=function(e,t,n){m(this,e,t,!1,n)},f.prototype.writeUInt32LE=function(e,t,n){v(this,e,t,!0,n)},f.prototype.writeUInt32BE=function(e,t,n){v(this,e,t,!1,n)},f.prototype.writeInt8=function(e,t,n){n||(F(null!=e,"missing value"),F(null!=t,"missing offset"),F(t<this.length,"Trying to write beyond buffer length"),N(e,127,-128)),t>=this.length||(0<=e?this.writeUInt8(e,t,n):this.writeUInt8(255+e+1,t,n))},f.prototype.writeInt16LE=function(e,t,n){_(this,e,t,!0,n)},f.prototype.writeInt16BE=function(e,t,n){_(this,e,t,!1,n)},f.prototype.writeInt32LE=function(e,t,n){E(this,e,t,!0,n)},f.prototype.writeInt32BE=function(e,t,n){E(this,e,t,!1,n)},f.prototype.writeFloatLE=function(e,t,n){I(this,e,t,!0,n)},f.prototype.writeFloatBE=function(e,t,n){I(this,e,t,!1,n)},f.prototype.writeDoubleLE=function(e,t,n){A(this,e,t,!0,n)},f.prototype.writeDoubleBE=function(e,t,n){A(this,e,t,!1,n)},f.prototype.fill=function(e,t,n){if(e=e||0,t=t||0,n=n||this.length,"string"==typeof e&&(e=e.charCodeAt(0)),F("number"==typeof e&&!isNaN(e),"value is not a number"),F(t<=n,"end < start"),n!==t&&0!==this.length){F(0<=t&&t<this.length,"start out of bounds"),F(0<=n&&n<=this.length,"end out of bounds");for(var r=t;r<n;r++)this[r]=e}},f.prototype.inspect=function(){for(var e=[],t=this.length,n=0;n<t;n++)if(e[n]=S(this[n]),n===O.INSPECT_MAX_BYTES){e[n+1]="...";break}return"<Buffer "+e.join(" ")+">"},f.prototype.toArrayBuffer=function(){if("undefined"==typeof Uint8Array)throw new Error("Buffer.toArrayBuffer not supported in this browser");if(f._useTypedArrays)return new f(this).buffer;for(var e=new Uint8Array(this.length),t=0,n=e.length;t<n;t+=1)e[t]=this[t];return e.buffer};var B=f.prototype;function L(e,t,n){return"number"!=typeof e?n:t<=(e=~~e)?t:0<=e?e:0<=(e+=t)?e:0}function U(e){return(e=~~Math.ceil(+e))<0?0:e}function x(e){return(Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)})(e)}function S(e){return e<16?"0"+e.toString(16):e.toString(16)}function j(e){for(var t=[],n=0;n<e.length;n++){var r=e.charCodeAt(n);if(r<=127)t.push(e.charCodeAt(n));else{var o=n;55296<=r&&r<=57343&&n++;for(var i=encodeURIComponent(e.slice(o,n+1)).substr(1).split("%"),u=0;u<i.length;u++)t.push(parseInt(i[u],16))}}return t}function C(e){return s.toByteArray(e)}function k(e,t,n,r){for(var o=0;o<r&&!(o+n>=t.length||o>=e.length);o++)t[o+n]=e[o];return o}function T(e){try{return decodeURIComponent(e)}catch(e){return String.fromCharCode(65533)}}function M(e,t){F("number"==typeof e,"cannot write a non-number as a number"),F(0<=e,"specified a negative value for writing an unsigned value"),F(e<=t,"value is larger than maximum value for type"),F(Math.floor(e)===e,"value has a fractional component")}function N(e,t,n){F("number"==typeof e,"cannot write a non-number as a number"),F(e<=t,"value larger than maximum allowed value"),F(n<=e,"value smaller than minimum allowed value"),F(Math.floor(e)===e,"value has a fractional component")}function Y(e,t,n){F("number"==typeof e,"cannot write a non-number as a number"),F(e<=t,"value larger than maximum allowed value"),F(n<=e,"value smaller than minimum allowed value")}function F(e,t){if(!e)throw new Error(t||"Failed assertion")}f._augment=function(e){return e._isBuffer=!0,e._get=e.get,e._set=e.set,e.get=B.get,e.set=B.set,e.write=B.write,e.toString=B.toString,e.toLocaleString=B.toString,e.toJSON=B.toJSON,e.copy=B.copy,e.slice=B.slice,e.readUInt8=B.readUInt8,e.readUInt16LE=B.readUInt16LE,e.readUInt16BE=B.readUInt16BE,e.readUInt32LE=B.readUInt32LE,e.readUInt32BE=B.readUInt32BE,e.readInt8=B.readInt8,e.readInt16LE=B.readInt16LE,e.readInt16BE=B.readInt16BE,e.readInt32LE=B.readInt32LE,e.readInt32BE=B.readInt32BE,e.readFloatLE=B.readFloatLE,e.readFloatBE=B.readFloatBE,e.readDoubleLE=B.readDoubleLE,e.readDoubleBE=B.readDoubleBE,e.writeUInt8=B.writeUInt8,e.writeUInt16LE=B.writeUInt16LE,e.writeUInt16BE=B.writeUInt16BE,e.writeUInt32LE=B.writeUInt32LE,e.writeUInt32BE=B.writeUInt32BE,e.writeInt8=B.writeInt8,e.writeInt16LE=B.writeInt16LE,e.writeInt16BE=B.writeInt16BE,e.writeInt32LE=B.writeInt32LE,e.writeInt32BE=B.writeInt32BE,e.writeFloatLE=B.writeFloatLE,e.writeFloatBE=B.writeFloatBE,e.writeDoubleLE=B.writeDoubleLE,e.writeDoubleBE=B.writeDoubleBE,e.fill=B.fill,e.inspect=B.inspect,e.toArrayBuffer=B.toArrayBuffer,e}}).call(this,D("lYpoI2"),"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},D("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/buffer/index.js","/node_modules/gulp-browserify/node_modules/buffer")},{"base64-js":2,buffer:3,ieee754:11,lYpoI2:10}],4:[function(l,d,e){(function(e,t,u,n,r,o,i,a,f){u=l("buffer").Buffer;var s=4,c=new u(s);c.fill(0);d.exports={hash:function(e,t,n,r){return u.isBuffer(e)||(e=new u(e)),function(e,t,n){for(var r=new u(t),o=n?r.writeInt32BE:r.writeInt32LE,i=0;i<e.length;i++)o.call(r,e[i],4*i,!0);return r}(t(function(e,t){if(e.length%s!=0){var n=e.length+(s-e.length%s);e=u.concat([e,c],n)}for(var r=[],o=t?e.readInt32BE:e.readInt32LE,i=0;i<e.length;i+=s)r.push(o.call(e,i));return r}(e,r),8*e.length),n,r)}}}).call(this,l("lYpoI2"),"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},l("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/helpers.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{buffer:3,lYpoI2:10}],5:[function(w,e,b){(function(e,t,a,n,r,o,i,u,f){a=w("buffer").Buffer;var s=w("./sha"),c=w("./sha256"),l=w("./rng"),d={sha1:s,sha256:c,md5:w("./md5")},h=64,p=new a(h);function g(e,r){var o=d[e=e||"sha1"],i=[];return o||y("algorithm:",e,"is not yet supported"),{update:function(e){return a.isBuffer(e)||(e=new a(e)),i.push(e),e.length,this},digest:function(e){var t=a.concat(i),n=r?function(e,t,n){a.isBuffer(t)||(t=new a(t)),a.isBuffer(n)||(n=new a(n)),t.length>h?t=e(t):t.length<h&&(t=a.concat([t,p],h));for(var r=new a(h),o=new a(h),i=0;i<h;i++)r[i]=54^t[i],o[i]=92^t[i];var u=e(a.concat([r,n]));return e(a.concat([o,u]))}(o,r,t):o(t);return i=null,e?n.toString(e):n}}}function y(){var e=[].slice.call(arguments).join(" ");throw new Error([e,"we accept pull requests","http://github.com/dominictarr/crypto-browserify"].join("\n"))}p.fill(0),b.createHash=function(e){return g(e)},b.createHmac=function(e,t){return g(e,t)},b.randomBytes=function(e,t){if(!t||!t.call)return new a(l(e));try{t.call(this,void 0,new a(l(e)))}catch(e){t(e)}},function(e,t){for(var n in e)t(e[n],n)}(["createCredentials","createCipher","createCipheriv","createDecipher","createDecipheriv","createSign","createVerify","createDiffieHellman","pbkdf2"],function(e){b[e]=function(){y("sorry,",e,"is not implemented yet")}})}).call(this,w("lYpoI2"),"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},w("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/index.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{"./md5":6,"./rng":7,"./sha":8,"./sha256":9,buffer:3,lYpoI2:10}],6:[function(w,b,e){(function(e,t,n,r,o,i,u,a,f){var s=w("./helpers");function c(e,t){e[t>>5]|=128<<t%32,e[14+(t+64>>>9<<4)]=t;for(var n=1732584193,r=-271733879,o=-1732584194,i=271733878,u=0;u<e.length;u+=16){var a=n,f=r,s=o,c=i;r=g(r=g(r=g(r=g(r=p(r=p(r=p(r=p(r=h(r=h(r=h(r=h(r=d(r=d(r=d(r=d(r,o=d(o,i=d(i,n=d(n,r,o,i,e[u+0],7,-680876936),r,o,e[u+1],12,-389564586),n,r,e[u+2],17,606105819),i,n,e[u+3],22,-1044525330),o=d(o,i=d(i,n=d(n,r,o,i,e[u+4],7,-176418897),r,o,e[u+5],12,1200080426),n,r,e[u+6],17,-1473231341),i,n,e[u+7],22,-45705983),o=d(o,i=d(i,n=d(n,r,o,i,e[u+8],7,1770035416),r,o,e[u+9],12,-1958414417),n,r,e[u+10],17,-42063),i,n,e[u+11],22,-1990404162),o=d(o,i=d(i,n=d(n,r,o,i,e[u+12],7,1804603682),r,o,e[u+13],12,-40341101),n,r,e[u+14],17,-1502002290),i,n,e[u+15],22,1236535329),o=h(o,i=h(i,n=h(n,r,o,i,e[u+1],5,-165796510),r,o,e[u+6],9,-1069501632),n,r,e[u+11],14,643717713),i,n,e[u+0],20,-373897302),o=h(o,i=h(i,n=h(n,r,o,i,e[u+5],5,-701558691),r,o,e[u+10],9,38016083),n,r,e[u+15],14,-660478335),i,n,e[u+4],20,-405537848),o=h(o,i=h(i,n=h(n,r,o,i,e[u+9],5,568446438),r,o,e[u+14],9,-1019803690),n,r,e[u+3],14,-187363961),i,n,e[u+8],20,1163531501),o=h(o,i=h(i,n=h(n,r,o,i,e[u+13],5,-1444681467),r,o,e[u+2],9,-51403784),n,r,e[u+7],14,1735328473),i,n,e[u+12],20,-1926607734),o=p(o,i=p(i,n=p(n,r,o,i,e[u+5],4,-378558),r,o,e[u+8],11,-2022574463),n,r,e[u+11],16,1839030562),i,n,e[u+14],23,-35309556),o=p(o,i=p(i,n=p(n,r,o,i,e[u+1],4,-1530992060),r,o,e[u+4],11,1272893353),n,r,e[u+7],16,-155497632),i,n,e[u+10],23,-1094730640),o=p(o,i=p(i,n=p(n,r,o,i,e[u+13],4,681279174),r,o,e[u+0],11,-358537222),n,r,e[u+3],16,-722521979),i,n,e[u+6],23,76029189),o=p(o,i=p(i,n=p(n,r,o,i,e[u+9],4,-640364487),r,o,e[u+12],11,-421815835),n,r,e[u+15],16,530742520),i,n,e[u+2],23,-995338651),o=g(o,i=g(i,n=g(n,r,o,i,e[u+0],6,-198630844),r,o,e[u+7],10,1126891415),n,r,e[u+14],15,-1416354905),i,n,e[u+5],21,-57434055),o=g(o,i=g(i,n=g(n,r,o,i,e[u+12],6,1700485571),r,o,e[u+3],10,-1894986606),n,r,e[u+10],15,-1051523),i,n,e[u+1],21,-2054922799),o=g(o,i=g(i,n=g(n,r,o,i,e[u+8],6,1873313359),r,o,e[u+15],10,-30611744),n,r,e[u+6],15,-1560198380),i,n,e[u+13],21,1309151649),o=g(o,i=g(i,n=g(n,r,o,i,e[u+4],6,-145523070),r,o,e[u+11],10,-1120210379),n,r,e[u+2],15,718787259),i,n,e[u+9],21,-343485551),n=y(n,a),r=y(r,f),o=y(o,s),i=y(i,c)}return Array(n,r,o,i)}function l(e,t,n,r,o,i){return y(function(e,t){return e<<t|e>>>32-t}(y(y(t,e),y(r,i)),o),n)}function d(e,t,n,r,o,i,u){return l(t&n|~t&r,e,t,o,i,u)}function h(e,t,n,r,o,i,u){return l(t&r|n&~r,e,t,o,i,u)}function p(e,t,n,r,o,i,u){return l(t^n^r,e,t,o,i,u)}function g(e,t,n,r,o,i,u){return l(n^(t|~r),e,t,o,i,u)}function y(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}b.exports=function(e){return s.hash(e,c,16)}}).call(this,w("lYpoI2"),"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},w("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/md5.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{"./helpers":4,buffer:3,lYpoI2:10}],7:[function(e,s,t){(function(e,t,n,r,o,i,u,a,f){!function(){var e,t;e=function(e){for(var t,n=new Array(e),r=0;r<e;r++)0==(3&r)&&(t=4294967296*Math.random()),n[r]=t>>>((3&r)<<3)&255;return n},this.crypto&&crypto.getRandomValues&&(t=function(e){var t=new Uint8Array(e);return crypto.getRandomValues(t),t}),s.exports=t||e}()}).call(this,e("lYpoI2"),"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},e("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/rng.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{buffer:3,lYpoI2:10}],8:[function(l,d,e){(function(e,t,n,r,o,i,u,a,f){var s=l("./helpers");function c(e,t){e[t>>5]|=128<<24-t%32,e[15+(t+64>>9<<4)]=t;for(var n,r=Array(80),o=1732584193,i=-271733879,u=-1732584194,a=271733878,f=-1009589776,s=0;s<e.length;s+=16){for(var c=o,l=i,d=u,h=a,p=f,g=0;g<80;g++){r[g]=g<16?e[s+g]:m(r[g-3]^r[g-8]^r[g-14]^r[g-16],1);var y=b(b(m(o,5),w(g,i,u,a)),b(b(f,r[g]),(n=g)<20?1518500249:n<40?1859775393:n<60?-1894007588:-899497514));f=a,a=u,u=m(i,30),i=o,o=y}o=b(o,c),i=b(i,l),u=b(u,d),a=b(a,h),f=b(f,p)}return Array(o,i,u,a,f)}function w(e,t,n,r){return e<20?t&n|~t&r:e<40?t^n^r:e<60?t&n|t&r|n&r:t^n^r}function b(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}function m(e,t){return e<<t|e>>>32-t}d.exports=function(e){return s.hash(e,c,20,!0)}}).call(this,l("lYpoI2"),"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},l("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{"./helpers":4,buffer:3,lYpoI2:10}],9:[function(l,d,e){(function(e,t,n,r,o,i,u,a,f){function B(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}function L(e,t){return e>>>t|e<<32-t}function U(e,t){return e>>>t}function s(e,t){var n,r,o,i,u,a,f,s,c,l,d,h,p,g,y,w,b,m,v=new Array(1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298),_=new Array(1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225),E=new Array(64);e[t>>5]|=128<<24-t%32,e[15+(t+64>>9<<4)]=t;for(var I=0;I<e.length;I+=16){n=_[0],r=_[1],o=_[2],i=_[3],u=_[4],a=_[5],f=_[6],s=_[7];for(var A=0;A<64;A++)E[A]=A<16?e[A+I]:B(B(B((m=E[A-2],L(m,17)^L(m,19)^U(m,10)),E[A-7]),(b=E[A-15],L(b,7)^L(b,18)^U(b,3))),E[A-16]),c=B(B(B(B(s,L(w=u,6)^L(w,11)^L(w,25)),(y=u)&a^~y&f),v[A]),E[A]),l=B(L(g=n,2)^L(g,13)^L(g,22),(d=n)&(h=r)^d&(p=o)^h&p),s=f,f=a,a=u,u=B(i,c),i=o,o=r,r=n,n=B(c,l);_[0]=B(n,_[0]),_[1]=B(r,_[1]),_[2]=B(o,_[2]),_[3]=B(i,_[3]),_[4]=B(u,_[4]),_[5]=B(a,_[5]),_[6]=B(f,_[6]),_[7]=B(s,_[7])}return _}var c=l("./helpers");d.exports=function(e){return c.hash(e,s,32,!0)}}).call(this,l("lYpoI2"),"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},l("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha256.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{"./helpers":4,buffer:3,lYpoI2:10}],10:[function(e,c,t){(function(e,t,n,r,o,i,u,a,f){function s(){}(e=c.exports={}).nextTick=function(){var e="undefined"!=typeof window&&window.setImmediate,t="undefined"!=typeof window&&window.postMessage&&window.addEventListener;if(e)return function(e){return window.setImmediate(e)};if(t){var n=[];return window.addEventListener("message",function(e){var t=e.source;t!==window&&null!==t||"process-tick"!==e.data||(e.stopPropagation(),0<n.length&&n.shift()())},!0),function(e){n.push(e),window.postMessage("process-tick","*")}}return function(e){setTimeout(e,0)}}(),e.title="browser",e.browser=!0,e.env={},e.argv=[],e.on=s,e.addListener=s,e.once=s,e.off=s,e.removeListener=s,e.removeAllListeners=s,e.emit=s,e.binding=function(e){throw new Error("process.binding is not supported")},e.cwd=function(){return"/"},e.chdir=function(e){throw new Error("process.chdir is not supported")}}).call(this,e("lYpoI2"),"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},e("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/process/browser.js","/node_modules/gulp-browserify/node_modules/process")},{buffer:3,lYpoI2:10}],11:[function(e,t,s){(function(e,t,n,r,o,i,u,a,f){s.read=function(e,t,n,r,o){var i,u,a=8*o-r-1,f=(1<<a)-1,s=f>>1,c=-7,l=n?o-1:0,d=n?-1:1,h=e[t+l];for(l+=d,i=h&(1<<-c)-1,h>>=-c,c+=a;0<c;i=256*i+e[t+l],l+=d,c-=8);for(u=i&(1<<-c)-1,i>>=-c,c+=r;0<c;u=256*u+e[t+l],l+=d,c-=8);if(0===i)i=1-s;else{if(i===f)return u?NaN:1/0*(h?-1:1);u+=Math.pow(2,r),i-=s}return(h?-1:1)*u*Math.pow(2,i-r)},s.write=function(e,t,n,r,o,i){var u,a,f,s=8*i-o-1,c=(1<<s)-1,l=c>>1,d=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:i-1,p=r?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(a=isNaN(t)?1:0,u=c):(u=Math.floor(Math.log(t)/Math.LN2),t*(f=Math.pow(2,-u))<1&&(u--,f*=2),2<=(t+=1<=u+l?d/f:d*Math.pow(2,1-l))*f&&(u++,f/=2),c<=u+l?(a=0,u=c):1<=u+l?(a=(t*f-1)*Math.pow(2,o),u+=l):(a=t*Math.pow(2,l-1)*Math.pow(2,o),u=0));8<=o;e[n+h]=255&a,h+=p,a/=256,o-=8);for(u=u<<o|a,s+=o;0<s;e[n+h]=255&u,h+=p,u/=256,s-=8);e[n+h-p]|=128*g}}).call(this,e("lYpoI2"),"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},e("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/ieee754/index.js","/node_modules/ieee754")},{buffer:3,lYpoI2:10}]},{},[1])(1)});

/***/ }),

/***/ "./src/scripts/fields.js":
/*!*******************************!*\
  !*** ./src/scripts/fields.js ***!
  \*******************************/
/*! exports provided: f */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return f; });
// Globals to define spreadsheet column names,
//     in case something is changed later.
var f = {
  type: 'Type',
  name: 'Name',
  sku: 'SKU',
  pic: 'PIC',
  cat: 'tax:product_cat',
  tag: 'tax:product_tag',
  desc: 'Description',
  short_desc: 'Short Description',
  visibility: 'Visibility in catalog',
  package: 'Package',
  title: 'Title',
  // Used in packages
  attr: 'Attributes',
  // Used in packages
  model: 'Model',
  // Used in packages
  skus: 'SKUs',
  // Used in packages
  prod_info: 'Product Info',
  // Used in packages
  image: 'Image',
  indent: 'Indention',
  warrantyList: 'Warranty List',
  warrantyBody: 'Warranty Body',
  orderInfo: 'Ordering Information',
  feats: 'Product Features',
  related: 'Related Products',
  indict: 'Indications',
  downs: 'Downloads',
  main_model: 'Main Model',
  pnf: 'In Part Number Finder'
};


/***/ }),

/***/ "./src/scripts/filters.js":
/*!********************************!*\
  !*** ./src/scripts/filters.js ***!
  \********************************/
/*! exports provided: findSpecBounds, findSpecIcons, computeChecksum, filterExisting, compareHashesForPayload, keyByPIC, linkVariations, linkPackages, verifyFields, verifyFiles, buildSpec, variationSlice */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findSpecBounds", function() { return findSpecBounds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findSpecIcons", function() { return findSpecIcons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "computeChecksum", function() { return computeChecksum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterExisting", function() { return filterExisting; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareHashesForPayload", function() { return compareHashesForPayload; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyByPIC", function() { return keyByPIC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linkVariations", function() { return linkVariations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linkPackages", function() { return linkPackages; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "verifyFields", function() { return verifyFields; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "verifyFiles", function() { return verifyFiles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buildSpec", function() { return buildSpec; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "variationSlice", function() { return variationSlice; });
/* harmony import */ var _fields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fields.js */ "./src/scripts/fields.js");
/* harmony import */ var object_hash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! object-hash */ "./node_modules/object-hash/dist/object_hash.js");
/* harmony import */ var object_hash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(object_hash__WEBPACK_IMPORTED_MODULE_1__);
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }


 //   The attribute column right before specifications start

var b_SpecsStart = 'Specification Start';
var b_SpecsEnd = 'Specification End';

function findSpecBounds(attrRow) {
  var started = false;
  return attrRow.map(function (val, ind) {
    if (val === b_SpecsStart) {
      started = true;
      return ind;
    }

    if (val === b_SpecsEnd && started) {
      return ind;
    }

    return false;
  }).filter(function (val) {
    if (false !== val) return true; // I know this looks silly, but what if val == 0?
  });
}

function findSpecIcons(attrRow, row) {
  var icons = {};

  if (!row.includes('ICON')) {
    window.alert('Are you sure your defining specification icons?');
  }

  row.map(function (val, ind) {
    if ('' !== val && 'ICON' !== val) {
      icons[attrRow[ind]] = val;
    }
  });
  return icons;
}

function computeChecksum(prods) {
  Object.values(prods).map(function (prod) {
    prods[prod[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].pic]].checksum = object_hash__WEBPACK_IMPORTED_MODULE_1___default()(prod);
  });
  console.log('HASHed', prods);
  return prods;
}

function filterExisting(data) {
  var existingHashes = {};
  data.forEach(function (WPprod) {
    try {
      existingHashes[WPprod.meta.PIC[0]] = {
        id: WPprod.id,
        checksum: String(WPprod.meta.product_hash[0])
      };
    } catch (_unused) {
      console.log("ID:".concat(WPprod.id, " is not a legitimate product :("));
    }
  });
  return existingHashes;
}

function compareHashesForPayload(newProds, existing) {
  var updating = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var PICsToUpdate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';
  if (!existing) return [[], Object.keys(newProds)];
  var toPost = [];

  if (PICsToUpdate) {
    console.log('PIC specifier found', PICsToUpdate);
    toPost.push.apply(toPost, _toConsumableArray(PICsToUpdate.split(',').map(function (pic) {
      pic = pic.trim();
      if (newProds[pic]) return pic;
    }).filter(function (val) {
      return val;
    })));
  } else if (updating) {
    // If this is an update, consider checksums for unchanged products
    toPost.push.apply(toPost, _toConsumableArray(Object.keys(newProds).map(function (pic) {
      if (existing[pic] && existing[pic].checksum === newProds[pic].checksum) {
        return false;
      }

      return pic;
    }).filter(function (val) {
      return false !== val;
    })));
  } else {
    // Otherwise, post everything found
    toPost.push.apply(toPost, _toConsumableArray(Object.keys(newProds)));
  } // For every product that'll be posted, find its possible corresponding post in WP to delete


  var toDelete = toPost.filter(function (pic) {
    return undefined !== existing[pic];
  }).map(function (pic) {
    return existing[pic].id;
  });
  return [toDelete, toPost];
}

function keyByPIC(prods) {
  var ProdByPIC = {};
  prods.map(function (val) {
    if (!val) {
      return false;
    }

    if (!ProdByPIC[val[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].pic]]) {
      ProdByPIC[val[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].pic]] = [];
    }

    ProdByPIC[val[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].pic]] = val;
    return val;
  });
  return ProdByPIC;
}

function splitAndVerify(commaSeparated) {
  if (!commaSeparated) return [];
  var rv = commaSeparated.split(',').map(function (val) {
    return val.trim();
  });

  if ('' === rv[0]) {
    return false;
  }

  return rv;
}

function buildPackageObj(packages) {
  var rv = {};
  var attr = packages[0].splice(1); // Ignore ID field since the rows are spliced too

  packages.splice(1).map(function (row) {
    var id = row[0];

    if (undefined !== rv[id]) {
      window.alert("Conflicting package ID's found: ".concat(id));
    }

    rv[id] = {};
    row.splice(1).map(function (val, ind) {
      rv[id][attr[ind]] = val;
    });
    rv[id][_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].attr] = splitAndVerify(rv[id][_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].attr]);
    rv[id][_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].skus] = splitAndVerify(rv[id][_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].skus]);
  });
  return rv;
}

function linkVariations(parents, varies) {
  // Give all parents an array first, and if prod.type is simple,
  //        copy the sku and name to make a basic variation
  Object.values(parents).map(function (prod) {
    parents[prod[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].pic]].variations = [];

    if ('simple' === prod[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].type]) {
      parents[prod[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].pic]].variations.push({
        name: prod[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].name],
        sku: prod[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].sku],
        specs: []
      });
    }
  });
  varies.map(function (val) {
    if (undefined === parents[val[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].pic]]) return false;
    var varN = parents[val[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].pic]].variations.push({
      name: val[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].name],
      sku: val[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].sku],
      specs: val.specs // This is too heavy optimizeVariations transforms later

    }); // Undefined is better for payload size

    if (val[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].image]) {
      parents[val[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].pic]].variations[varN - 1].image = val[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].image];
      console.log('has image');
    }

    ;

    if (val[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].indent]) {
      parents[val[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].pic]].variations[varN - 1].indent = val[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].indent];
    }

    ;

    if (val[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].package]) {
      parents[val[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].pic]].variations[varN - 1].package = val[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].package];
    }

    ;
  });
  return parents;
}

function linkPackages(parents, packs) {
  packs = buildPackageObj(packs); // Learn what you can from just variations

  Object.values(parents).map(function (prod) {
    var packages = {}; // Default package

    packages.drop = {
      label: '',
      //! This should pull from PIC by controller
      pic: prod[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].pic],
      model: 'B',
      skus: [],
      specs: [],
      // This needs to be pulled from varying attributes
      product_info: ['name', 'description', 'image']
    };

    if (prod.variations) {
      prod.variations.map(function (vary) {
        if (undefined !== vary.package) {
          // Variation specifies a package to be in
          //   see if that package exists first
          if (!packages[vary.package]) {
            packages[vary.package] = {
              // Base package template
              label: vary.package,
              pic: prod[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].pic],
              model: 'B',
              skus: [],
              specs: [],
              // Defined by pack sheet below
              product_info: [] // Defined by pack sheet below

            }; // if this is a 'list' package, ensure model A

            if ('list' === vary.package) {
              packages[vary.package].model = 'A';
              packages[vary.package].label = ''; //! PIC's name if on another product

              packages[vary.package].product_info = ['name', 'description', 'image'];
            }
          } // If any of the variations have images, upgrade that package model.


          if (vary.image) {
            packages[vary.package].model = 'C'; //   Make sure they're separate from the 'drop' first
            // Any other details should be defined by pack sheet
          } // Add variation to the package of its choice


          console.log(prod[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].name], vary.package);
          packages[vary.package].skus.push(vary.sku); // If a package name isn't specified but the variation still uses an image, use a blank package name, similar to 'drop'
        } else if (vary.image) {
          // Check if there already isn't a package for unlabeled packages of variation images.
          if (!packages.varyImage) {
            packages.varyImage = {
              label: '',
              pic: prod[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].pic],
              skus: [],
              specs: [],
              model: 'C',
              product_info: ['name', 'description', 'image']
            };
          }

          packages.varyImage.skus.push(vary.sku);
        } else {
          packages.drop.skus.push(vary.sku);
        }
      });
    } //   Remove default if every variation found a package


    if (0 === packages.drop.skus.length) {
      delete packages.drop;
    } // Now apply the package file for more packages and specs
    // All packages must have names by now, otherwise the variations wouldn't be able to save or they would be put in 'drop'


    if (prod[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].package]) {
      prod[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].package].split(',').map(function (id) {
        // This is a package who's name derives from PIC
        id = id.trim(); // Before making custom package, make sure the variations didn't already define it.

        if (packs[id][_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].title] & packages[packs[id][_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].title]]) {
          packages['custom' + id] = packages[packs[id][_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].title]];
          delete packages[packs[id][_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].title]];
        } else
          /* Otherwise, build the new package */
          {
            packages['custom' + id] = {
              label: '',
              pic: '',
              skus: [],
              model: 'B',
              specs: [],
              // This needs to be pulled from varying attributes
              product_info: []
            };
          } // For every field that is defined by the package sheet, confirm and re-specify.


        if (packs[id][_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].image]) {
          packages['custom' + id].model = 'D';
          packages['custom' + id].image = packs[id][_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].image];
        }

        if (packs[id][_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].pic]) {
          packages['custom' + id].pic = packs[id][_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].pic];
        }

        if (packs[id][_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].skus]) {
          var _packages$skus;

          (_packages$skus = packages['custom' + id].skus).push.apply(_packages$skus, _toConsumableArray(packs[id][_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].skus]));
        }

        if (packs[id][_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].attr]) {
          packages['custom' + id].specs = packs[id][_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].attr];
        }

        if (packs[id][_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].title]) {
          packages['custom' + id].label = packs[id][_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].title];
        } else {
          // If the title is not specified, this is a product blurb and the title and product_info should be pulled from the PIC.
          packages['custom' + id].product_info = ['name', 'description', 'image'];
        }

        if (packs[id][_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].model]) {
          packages['custom' + id].model = packs[id][_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].model];
        }
      });
    } // TODO: Test with Posterior Mounting Brackets with the art of linking via label and specify specs in sheet
    // TODO:  nevermind, but test anyways
    /// / : Confirm that the first package is the 'drop' package
    // TODO: Stop using the drop package...
    // if (Object.values(packages)[0] && '' !== Object.values(packages)[0].label) {
    //   window.alert(`${prod[f.name]} should be specifying main product variations first!`);
    // }
    // Packages makes up both packages implicitly defined in variations and explicitly from the sheet


    parents[prod[_fields_js__WEBPACK_IMPORTED_MODULE_0__["f"].pic]].packages = packages;
  });
  return parents;
} // confirm definition of properties that will be used in POST
//    used for cleaning taxonomies for now


function verifyFields(prod) {
  return prod;
}

function verifyFiles(parentFileHandler, variationFileHandler, packageFileHandler) {
  if (parentFileHandler === undefined) {
    window.alert('Specify a parent product file first');
    return false;
  }

  if (variationFileHandler === undefined) {
    window.alert('Specify a variations file first');
    return false;
  }

  if (packageFileHandler === undefined) {
    window.alert('Specify a package file first');
    return false;
  }

  return true;
}

function buildSpec(start, end, ind, val, icon) {
  if (start < ind && ind < end) {
    var spec = {}; // Value

    spec.val = val; // Icon

    spec.icon = icon; // Featured or Additional

    if (val.includes('*')) {
      spec.val = val.replace('*', '');
      spec.featured = true;
    } else {
      spec.featured = false;
    }

    return spec;
  }

  return false;
}

function variationSlice(varyPack, i) {
  var rv = {
    varies: varyPack.varies[i],
    labels: varyPack.labels
  };
  return rv;
}



/***/ }),

/***/ 4:
/*!**************************************!*\
  !*** multi ./src/scripts/filters.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Users/jake/local/fillauer/app/public/wp-content/plugins/fillauer-product-importer/src/scripts/filters.js */"./src/scripts/filters.js");


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1oYXNoL2Rpc3Qvb2JqZWN0X2hhc2guanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NjcmlwdHMvZmllbGRzLmpzIiwid2VicGFjazovLy8uL3NyYy9zY3JpcHRzL2ZpbHRlcnMuanMiXSwibmFtZXMiOlsiZiIsInR5cGUiLCJuYW1lIiwic2t1IiwicGljIiwiY2F0IiwidGFnIiwiZGVzYyIsInNob3J0X2Rlc2MiLCJ2aXNpYmlsaXR5IiwicGFja2FnZSIsInRpdGxlIiwiYXR0ciIsIm1vZGVsIiwic2t1cyIsInByb2RfaW5mbyIsImltYWdlIiwiaW5kZW50Iiwid2FycmFudHlMaXN0Iiwid2FycmFudHlCb2R5Iiwib3JkZXJJbmZvIiwiZmVhdHMiLCJyZWxhdGVkIiwiaW5kaWN0IiwiZG93bnMiLCJtYWluX21vZGVsIiwicG5mIiwiYl9TcGVjc1N0YXJ0IiwiYl9TcGVjc0VuZCIsImZpbmRTcGVjQm91bmRzIiwiYXR0clJvdyIsInN0YXJ0ZWQiLCJtYXAiLCJ2YWwiLCJpbmQiLCJmaWx0ZXIiLCJmaW5kU3BlY0ljb25zIiwicm93IiwiaWNvbnMiLCJpbmNsdWRlcyIsIndpbmRvdyIsImFsZXJ0IiwiY29tcHV0ZUNoZWNrc3VtIiwicHJvZHMiLCJPYmplY3QiLCJ2YWx1ZXMiLCJwcm9kIiwiY2hlY2tzdW0iLCJoYXNoIiwiY29uc29sZSIsImxvZyIsImZpbHRlckV4aXN0aW5nIiwiZGF0YSIsImV4aXN0aW5nSGFzaGVzIiwiZm9yRWFjaCIsIldQcHJvZCIsIm1ldGEiLCJQSUMiLCJpZCIsIlN0cmluZyIsInByb2R1Y3RfaGFzaCIsImNvbXBhcmVIYXNoZXNGb3JQYXlsb2FkIiwibmV3UHJvZHMiLCJleGlzdGluZyIsInVwZGF0aW5nIiwiUElDc1RvVXBkYXRlIiwia2V5cyIsInRvUG9zdCIsInB1c2giLCJzcGxpdCIsInRyaW0iLCJ0b0RlbGV0ZSIsInVuZGVmaW5lZCIsImtleUJ5UElDIiwiUHJvZEJ5UElDIiwic3BsaXRBbmRWZXJpZnkiLCJjb21tYVNlcGFyYXRlZCIsInJ2IiwiYnVpbGRQYWNrYWdlT2JqIiwicGFja2FnZXMiLCJzcGxpY2UiLCJsaW5rVmFyaWF0aW9ucyIsInBhcmVudHMiLCJ2YXJpZXMiLCJ2YXJpYXRpb25zIiwic3BlY3MiLCJ2YXJOIiwibGlua1BhY2thZ2VzIiwicGFja3MiLCJkcm9wIiwibGFiZWwiLCJwcm9kdWN0X2luZm8iLCJ2YXJ5IiwidmFyeUltYWdlIiwibGVuZ3RoIiwidmVyaWZ5RmllbGRzIiwidmVyaWZ5RmlsZXMiLCJwYXJlbnRGaWxlSGFuZGxlciIsInZhcmlhdGlvbkZpbGVIYW5kbGVyIiwicGFja2FnZUZpbGVIYW5kbGVyIiwiYnVpbGRTcGVjIiwic3RhcnQiLCJlbmQiLCJpY29uIiwic3BlYyIsInJlcGxhY2UiLCJmZWF0dXJlZCIsInZhcmlhdGlvblNsaWNlIiwidmFyeVBhY2siLCJpIiwibGFiZWxzIl0sIm1hcHBpbmdzIjoiO1FBQUE7UUFDQTs7UUFFQTtRQUNBOztRQUVBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7OztRQUdBO1FBQ0E7O1FBRUE7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7UUFDQSwwQ0FBMEMsZ0NBQWdDO1FBQzFFO1FBQ0E7O1FBRUE7UUFDQTtRQUNBO1FBQ0Esd0RBQXdELGtCQUFrQjtRQUMxRTtRQUNBLGlEQUFpRCxjQUFjO1FBQy9EOztRQUVBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQSx5Q0FBeUMsaUNBQWlDO1FBQzFFLGdIQUFnSCxtQkFBbUIsRUFBRTtRQUNySTtRQUNBOztRQUVBO1FBQ0E7UUFDQTtRQUNBLDJCQUEyQiwwQkFBMEIsRUFBRTtRQUN2RCxpQ0FBaUMsZUFBZTtRQUNoRDtRQUNBO1FBQ0E7O1FBRUE7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VUFBTSxFQUFFRixRQUFRLENBQUNFO0FBRlIsR0FBWDtBQUlBLFNBQU9qQyxFQUFQO0FBQ0QiLCJmaWxlIjoiZmlsdGVycy5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSA0KTtcbiIsIiFmdW5jdGlvbihlKXtpZihcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyltb2R1bGUuZXhwb3J0cz1lKCk7ZWxzZSBpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQpZGVmaW5lKGUpO2Vsc2V7dmFyIHQ7XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdz90PXdpbmRvdzpcInVuZGVmaW5lZFwiIT10eXBlb2YgZ2xvYmFsP3Q9Z2xvYmFsOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmJiYodD1zZWxmKSx0Lm9iamVjdEhhc2g9ZSgpfX0oZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24gbyhpLHUsYSl7ZnVuY3Rpb24gZihuLGUpe2lmKCF1W25dKXtpZighaVtuXSl7dmFyIHQ9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZSYmdClyZXR1cm4gdChuLCEwKTtpZihzKXJldHVybiBzKG4sITApO3Rocm93IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbitcIidcIil9dmFyIHI9dVtuXT17ZXhwb3J0czp7fX07aVtuXVswXS5jYWxsKHIuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgdD1pW25dWzFdW2VdO3JldHVybiBmKHR8fGUpfSxyLHIuZXhwb3J0cyxvLGksdSxhKX1yZXR1cm4gdVtuXS5leHBvcnRzfWZvcih2YXIgcz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGU9MDtlPGEubGVuZ3RoO2UrKylmKGFbZV0pO3JldHVybiBmfSh7MTpbZnVuY3Rpb24odyxiLG0peyhmdW5jdGlvbihlLHQscyxuLHIsbyxpLHUsYSl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGY9dyhcImNyeXB0b1wiKTtmdW5jdGlvbiBjKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGUsdCl7dmFyIG47bj1cInBhc3N0aHJvdWdoXCIhPT10LmFsZ29yaXRobT9mLmNyZWF0ZUhhc2godC5hbGdvcml0aG0pOm5ldyB5O3ZvaWQgMD09PW4ud3JpdGUmJihuLndyaXRlPW4udXBkYXRlLG4uZW5kPW4udXBkYXRlKTtnKHQsbikuZGlzcGF0Y2goZSksbi51cGRhdGV8fG4uZW5kKFwiXCIpO2lmKG4uZGlnZXN0KXJldHVybiBuLmRpZ2VzdChcImJ1ZmZlclwiPT09dC5lbmNvZGluZz92b2lkIDA6dC5lbmNvZGluZyk7dmFyIHI9bi5yZWFkKCk7cmV0dXJuXCJidWZmZXJcIiE9PXQuZW5jb2Rpbmc/ci50b1N0cmluZyh0LmVuY29kaW5nKTpyfShlLHQ9aChlLHQpKX0obT1iLmV4cG9ydHM9Yykuc2hhMT1mdW5jdGlvbihlKXtyZXR1cm4gYyhlKX0sbS5rZXlzPWZ1bmN0aW9uKGUpe3JldHVybiBjKGUse2V4Y2x1ZGVWYWx1ZXM6ITAsYWxnb3JpdGhtOlwic2hhMVwiLGVuY29kaW5nOlwiaGV4XCJ9KX0sbS5NRDU9ZnVuY3Rpb24oZSl7cmV0dXJuIGMoZSx7YWxnb3JpdGhtOlwibWQ1XCIsZW5jb2Rpbmc6XCJoZXhcIn0pfSxtLmtleXNNRDU9ZnVuY3Rpb24oZSl7cmV0dXJuIGMoZSx7YWxnb3JpdGhtOlwibWQ1XCIsZW5jb2Rpbmc6XCJoZXhcIixleGNsdWRlVmFsdWVzOiEwfSl9O3ZhciBsPWYuZ2V0SGFzaGVzP2YuZ2V0SGFzaGVzKCkuc2xpY2UoKTpbXCJzaGExXCIsXCJtZDVcIl07bC5wdXNoKFwicGFzc3Rocm91Z2hcIik7dmFyIGQ9W1wiYnVmZmVyXCIsXCJoZXhcIixcImJpbmFyeVwiLFwiYmFzZTY0XCJdO2Z1bmN0aW9uIGgoZSx0KXt0PXR8fHt9O3ZhciBuPXt9O2lmKG4uYWxnb3JpdGhtPXQuYWxnb3JpdGhtfHxcInNoYTFcIixuLmVuY29kaW5nPXQuZW5jb2Rpbmd8fFwiaGV4XCIsbi5leGNsdWRlVmFsdWVzPSEhdC5leGNsdWRlVmFsdWVzLG4uYWxnb3JpdGhtPW4uYWxnb3JpdGhtLnRvTG93ZXJDYXNlKCksbi5lbmNvZGluZz1uLmVuY29kaW5nLnRvTG93ZXJDYXNlKCksbi5pZ25vcmVVbmtub3duPSEwPT09dC5pZ25vcmVVbmtub3duLG4ucmVzcGVjdFR5cGU9ITEhPT10LnJlc3BlY3RUeXBlLG4ucmVzcGVjdEZ1bmN0aW9uTmFtZXM9ITEhPT10LnJlc3BlY3RGdW5jdGlvbk5hbWVzLG4ucmVzcGVjdEZ1bmN0aW9uUHJvcGVydGllcz0hMSE9PXQucmVzcGVjdEZ1bmN0aW9uUHJvcGVydGllcyxuLnVub3JkZXJlZEFycmF5cz0hMD09PXQudW5vcmRlcmVkQXJyYXlzLG4udW5vcmRlcmVkU2V0cz0hMSE9PXQudW5vcmRlcmVkU2V0cyxuLnVub3JkZXJlZE9iamVjdHM9ITEhPT10LnVub3JkZXJlZE9iamVjdHMsbi5yZXBsYWNlcj10LnJlcGxhY2VyfHx2b2lkIDAsbi5leGNsdWRlS2V5cz10LmV4Y2x1ZGVLZXlzfHx2b2lkIDAsdm9pZCAwPT09ZSl0aHJvdyBuZXcgRXJyb3IoXCJPYmplY3QgYXJndW1lbnQgcmVxdWlyZWQuXCIpO2Zvcih2YXIgcj0wO3I8bC5sZW5ndGg7KytyKWxbcl0udG9Mb3dlckNhc2UoKT09PW4uYWxnb3JpdGhtLnRvTG93ZXJDYXNlKCkmJihuLmFsZ29yaXRobT1sW3JdKTtpZigtMT09PWwuaW5kZXhPZihuLmFsZ29yaXRobSkpdGhyb3cgbmV3IEVycm9yKCdBbGdvcml0aG0gXCInK24uYWxnb3JpdGhtKydcIiAgbm90IHN1cHBvcnRlZC4gc3VwcG9ydGVkIHZhbHVlczogJytsLmpvaW4oXCIsIFwiKSk7aWYoLTE9PT1kLmluZGV4T2Yobi5lbmNvZGluZykmJlwicGFzc3Rocm91Z2hcIiE9PW4uYWxnb3JpdGhtKXRocm93IG5ldyBFcnJvcignRW5jb2RpbmcgXCInK24uZW5jb2RpbmcrJ1wiICBub3Qgc3VwcG9ydGVkLiBzdXBwb3J0ZWQgdmFsdWVzOiAnK2Quam9pbihcIiwgXCIpKTtyZXR1cm4gbn1mdW5jdGlvbiBwKGUpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGUpcmV0dXJuITE7cmV0dXJuIG51bGwhPS9eZnVuY3Rpb25cXHMrXFx3KlxccypcXChcXHMqXFwpXFxzKntcXHMrXFxbbmF0aXZlIGNvZGVcXF1cXHMrfSQvaS5leGVjKEZ1bmN0aW9uLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpKX1mdW5jdGlvbiBnKHUsdCxhKXthPWF8fFtdO2Z1bmN0aW9uIGYoZSl7cmV0dXJuIHQudXBkYXRlP3QudXBkYXRlKGUsXCJ1dGY4XCIpOnQud3JpdGUoZSxcInV0ZjhcIil9cmV0dXJue2Rpc3BhdGNoOmZ1bmN0aW9uKGUpe3UucmVwbGFjZXImJihlPXUucmVwbGFjZXIoZSkpO3ZhciB0PXR5cGVvZiBlO3JldHVybiBudWxsPT09ZSYmKHQ9XCJudWxsXCIpLHRoaXNbXCJfXCIrdF0oZSl9LF9vYmplY3Q6ZnVuY3Rpb24odCl7dmFyIGU9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpLG49L1xcW29iamVjdCAoLiopXFxdL2kuZXhlYyhlKTtuPShuPW4/blsxXTpcInVua25vd246W1wiK2UrXCJdXCIpLnRvTG93ZXJDYXNlKCk7dmFyIHI7aWYoMDw9KHI9YS5pbmRleE9mKHQpKSlyZXR1cm4gdGhpcy5kaXNwYXRjaChcIltDSVJDVUxBUjpcIityK1wiXVwiKTtpZihhLnB1c2godCksdm9pZCAwIT09cyYmcy5pc0J1ZmZlciYmcy5pc0J1ZmZlcih0KSlyZXR1cm4gZihcImJ1ZmZlcjpcIiksZih0KTtpZihcIm9iamVjdFwiPT09bnx8XCJmdW5jdGlvblwiPT09bil7dmFyIG89T2JqZWN0LmtleXModCk7dS51bm9yZGVyZWRPYmplY3RzJiYobz1vLnNvcnQoKSksITE9PT11LnJlc3BlY3RUeXBlfHxwKHQpfHxvLnNwbGljZSgwLDAsXCJwcm90b3R5cGVcIixcIl9fcHJvdG9fX1wiLFwiY29uc3RydWN0b3JcIiksdS5leGNsdWRlS2V5cyYmKG89by5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIXUuZXhjbHVkZUtleXMoZSl9KSksZihcIm9iamVjdDpcIitvLmxlbmd0aCtcIjpcIik7dmFyIGk9dGhpcztyZXR1cm4gby5mb3JFYWNoKGZ1bmN0aW9uKGUpe2kuZGlzcGF0Y2goZSksZihcIjpcIiksdS5leGNsdWRlVmFsdWVzfHxpLmRpc3BhdGNoKHRbZV0pLGYoXCIsXCIpfSl9aWYoIXRoaXNbXCJfXCIrbl0pe2lmKHUuaWdub3JlVW5rbm93bilyZXR1cm4gZihcIltcIituK1wiXVwiKTt0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gb2JqZWN0IHR5cGUgXCInK24rJ1wiJyl9dGhpc1tcIl9cIituXSh0KX0sX2FycmF5OmZ1bmN0aW9uKGUsdCl7dD12b2lkIDAhPT10P3Q6ITEhPT11LnVub3JkZXJlZEFycmF5czt2YXIgbj10aGlzO2lmKGYoXCJhcnJheTpcIitlLmxlbmd0aCtcIjpcIiksIXR8fGUubGVuZ3RoPD0xKXJldHVybiBlLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIG4uZGlzcGF0Y2goZSl9KTt2YXIgcj1bXSxvPWUubWFwKGZ1bmN0aW9uKGUpe3ZhciB0PW5ldyB5LG49YS5zbGljZSgpO3JldHVybiBnKHUsdCxuKS5kaXNwYXRjaChlKSxyPXIuY29uY2F0KG4uc2xpY2UoYS5sZW5ndGgpKSx0LnJlYWQoKS50b1N0cmluZygpfSk7cmV0dXJuIGE9YS5jb25jYXQociksby5zb3J0KCksdGhpcy5fYXJyYXkobywhMSl9LF9kYXRlOmZ1bmN0aW9uKGUpe3JldHVybiBmKFwiZGF0ZTpcIitlLnRvSlNPTigpKX0sX3N5bWJvbDpmdW5jdGlvbihlKXtyZXR1cm4gZihcInN5bWJvbDpcIitlLnRvU3RyaW5nKCkpfSxfZXJyb3I6ZnVuY3Rpb24oZSl7cmV0dXJuIGYoXCJlcnJvcjpcIitlLnRvU3RyaW5nKCkpfSxfYm9vbGVhbjpmdW5jdGlvbihlKXtyZXR1cm4gZihcImJvb2w6XCIrZS50b1N0cmluZygpKX0sX3N0cmluZzpmdW5jdGlvbihlKXtmKFwic3RyaW5nOlwiK2UubGVuZ3RoK1wiOlwiKSxmKGUudG9TdHJpbmcoKSl9LF9mdW5jdGlvbjpmdW5jdGlvbihlKXtmKFwiZm46XCIpLHAoZSk/dGhpcy5kaXNwYXRjaChcIltuYXRpdmVdXCIpOnRoaXMuZGlzcGF0Y2goZS50b1N0cmluZygpKSwhMSE9PXUucmVzcGVjdEZ1bmN0aW9uTmFtZXMmJnRoaXMuZGlzcGF0Y2goXCJmdW5jdGlvbi1uYW1lOlwiK1N0cmluZyhlLm5hbWUpKSx1LnJlc3BlY3RGdW5jdGlvblByb3BlcnRpZXMmJnRoaXMuX29iamVjdChlKX0sX251bWJlcjpmdW5jdGlvbihlKXtyZXR1cm4gZihcIm51bWJlcjpcIitlLnRvU3RyaW5nKCkpfSxfeG1sOmZ1bmN0aW9uKGUpe3JldHVybiBmKFwieG1sOlwiK2UudG9TdHJpbmcoKSl9LF9udWxsOmZ1bmN0aW9uKCl7cmV0dXJuIGYoXCJOdWxsXCIpfSxfdW5kZWZpbmVkOmZ1bmN0aW9uKCl7cmV0dXJuIGYoXCJVbmRlZmluZWRcIil9LF9yZWdleHA6ZnVuY3Rpb24oZSl7cmV0dXJuIGYoXCJyZWdleDpcIitlLnRvU3RyaW5nKCkpfSxfdWludDhhcnJheTpmdW5jdGlvbihlKXtyZXR1cm4gZihcInVpbnQ4YXJyYXk6XCIpLHRoaXMuZGlzcGF0Y2goQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZSkpfSxfdWludDhjbGFtcGVkYXJyYXk6ZnVuY3Rpb24oZSl7cmV0dXJuIGYoXCJ1aW50OGNsYW1wZWRhcnJheTpcIiksdGhpcy5kaXNwYXRjaChBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChlKSl9LF9pbnQ4YXJyYXk6ZnVuY3Rpb24oZSl7cmV0dXJuIGYoXCJ1aW50OGFycmF5OlwiKSx0aGlzLmRpc3BhdGNoKEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGUpKX0sX3VpbnQxNmFycmF5OmZ1bmN0aW9uKGUpe3JldHVybiBmKFwidWludDE2YXJyYXk6XCIpLHRoaXMuZGlzcGF0Y2goQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZSkpfSxfaW50MTZhcnJheTpmdW5jdGlvbihlKXtyZXR1cm4gZihcInVpbnQxNmFycmF5OlwiKSx0aGlzLmRpc3BhdGNoKEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGUpKX0sX3VpbnQzMmFycmF5OmZ1bmN0aW9uKGUpe3JldHVybiBmKFwidWludDMyYXJyYXk6XCIpLHRoaXMuZGlzcGF0Y2goQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZSkpfSxfaW50MzJhcnJheTpmdW5jdGlvbihlKXtyZXR1cm4gZihcInVpbnQzMmFycmF5OlwiKSx0aGlzLmRpc3BhdGNoKEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGUpKX0sX2Zsb2F0MzJhcnJheTpmdW5jdGlvbihlKXtyZXR1cm4gZihcImZsb2F0MzJhcnJheTpcIiksdGhpcy5kaXNwYXRjaChBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChlKSl9LF9mbG9hdDY0YXJyYXk6ZnVuY3Rpb24oZSl7cmV0dXJuIGYoXCJmbG9hdDY0YXJyYXk6XCIpLHRoaXMuZGlzcGF0Y2goQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZSkpfSxfYXJyYXlidWZmZXI6ZnVuY3Rpb24oZSl7cmV0dXJuIGYoXCJhcnJheWJ1ZmZlcjpcIiksdGhpcy5kaXNwYXRjaChuZXcgVWludDhBcnJheShlKSl9LF91cmw6ZnVuY3Rpb24oZSl7cmV0dXJuIGYoXCJ1cmw6XCIrZS50b1N0cmluZygpKX0sX21hcDpmdW5jdGlvbihlKXtmKFwibWFwOlwiKTt2YXIgdD1BcnJheS5mcm9tKGUpO3JldHVybiB0aGlzLl9hcnJheSh0LCExIT09dS51bm9yZGVyZWRTZXRzKX0sX3NldDpmdW5jdGlvbihlKXtmKFwic2V0OlwiKTt2YXIgdD1BcnJheS5mcm9tKGUpO3JldHVybiB0aGlzLl9hcnJheSh0LCExIT09dS51bm9yZGVyZWRTZXRzKX0sX2Jsb2I6ZnVuY3Rpb24oKXtpZih1Lmlnbm9yZVVua25vd24pcmV0dXJuIGYoXCJbYmxvYl1cIik7dGhyb3cgRXJyb3IoJ0hhc2hpbmcgQmxvYiBvYmplY3RzIGlzIGN1cnJlbnRseSBub3Qgc3VwcG9ydGVkXFxuKHNlZSBodHRwczovL2dpdGh1Yi5jb20vcHVsZW9zL29iamVjdC1oYXNoL2lzc3Vlcy8yNilcXG5Vc2UgXCJvcHRpb25zLnJlcGxhY2VyXCIgb3IgXCJvcHRpb25zLmlnbm9yZVVua25vd25cIlxcbicpfSxfZG9td2luZG93OmZ1bmN0aW9uKCl7cmV0dXJuIGYoXCJkb213aW5kb3dcIil9LF9wcm9jZXNzOmZ1bmN0aW9uKCl7cmV0dXJuIGYoXCJwcm9jZXNzXCIpfSxfdGltZXI6ZnVuY3Rpb24oKXtyZXR1cm4gZihcInRpbWVyXCIpfSxfcGlwZTpmdW5jdGlvbigpe3JldHVybiBmKFwicGlwZVwiKX0sX3RjcDpmdW5jdGlvbigpe3JldHVybiBmKFwidGNwXCIpfSxfdWRwOmZ1bmN0aW9uKCl7cmV0dXJuIGYoXCJ1ZHBcIil9LF90dHk6ZnVuY3Rpb24oKXtyZXR1cm4gZihcInR0eVwiKX0sX3N0YXR3YXRjaGVyOmZ1bmN0aW9uKCl7cmV0dXJuIGYoXCJzdGF0d2F0Y2hlclwiKX0sX3NlY3VyZWNvbnRleHQ6ZnVuY3Rpb24oKXtyZXR1cm4gZihcInNlY3VyZWNvbnRleHRcIil9LF9jb25uZWN0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIGYoXCJjb25uZWN0aW9uXCIpfSxfemxpYjpmdW5jdGlvbigpe3JldHVybiBmKFwiemxpYlwiKX0sX2NvbnRleHQ6ZnVuY3Rpb24oKXtyZXR1cm4gZihcImNvbnRleHRcIil9LF9ub2Rlc2NyaXB0OmZ1bmN0aW9uKCl7cmV0dXJuIGYoXCJub2Rlc2NyaXB0XCIpfSxfaHR0cHBhcnNlcjpmdW5jdGlvbigpe3JldHVybiBmKFwiaHR0cHBhcnNlclwiKX0sX2RhdGF2aWV3OmZ1bmN0aW9uKCl7cmV0dXJuIGYoXCJkYXRhdmlld1wiKX0sX3NpZ25hbDpmdW5jdGlvbigpe3JldHVybiBmKFwic2lnbmFsXCIpfSxfZnNldmVudDpmdW5jdGlvbigpe3JldHVybiBmKFwiZnNldmVudFwiKX0sX3Rsc3dyYXA6ZnVuY3Rpb24oKXtyZXR1cm4gZihcInRsc3dyYXBcIil9fX1mdW5jdGlvbiB5KCl7cmV0dXJue2J1ZjpcIlwiLHdyaXRlOmZ1bmN0aW9uKGUpe3RoaXMuYnVmKz1lfSxlbmQ6ZnVuY3Rpb24oZSl7dGhpcy5idWYrPWV9LHJlYWQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5idWZ9fX1tLndyaXRlVG9TdHJlYW09ZnVuY3Rpb24oZSx0LG4pe3JldHVybiB2b2lkIDA9PT1uJiYobj10LHQ9e30pLGcodD1oKGUsdCksbikuZGlzcGF0Y2goZSl9fSkuY2FsbCh0aGlzLHcoXCJsWXBvSTJcIiksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGY/c2VsZjpcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93P3dpbmRvdzp7fSx3KFwiYnVmZmVyXCIpLkJ1ZmZlcixhcmd1bWVudHNbM10sYXJndW1lbnRzWzRdLGFyZ3VtZW50c1s1XSxhcmd1bWVudHNbNl0sXCIvZmFrZV84ZmM5NGU3Yi5qc1wiLFwiL1wiKX0se2J1ZmZlcjozLGNyeXB0bzo1LGxZcG9JMjoxMH1dLDI6W2Z1bmN0aW9uKGUsdCxzKXsoZnVuY3Rpb24oZSx0LG4scixvLGksdSxhLGYpeyFmdW5jdGlvbihlKXtcInVzZSBzdHJpY3RcIjt2YXIgcz1cInVuZGVmaW5lZFwiIT10eXBlb2YgVWludDhBcnJheT9VaW50OEFycmF5OkFycmF5LG49XCIrXCIuY2hhckNvZGVBdCgwKSxyPVwiL1wiLmNoYXJDb2RlQXQoMCksbz1cIjBcIi5jaGFyQ29kZUF0KDApLGk9XCJhXCIuY2hhckNvZGVBdCgwKSx1PVwiQVwiLmNoYXJDb2RlQXQoMCksYT1cIi1cIi5jaGFyQ29kZUF0KDApLGY9XCJfXCIuY2hhckNvZGVBdCgwKTtmdW5jdGlvbiBjKGUpe3ZhciB0PWUuY2hhckNvZGVBdCgwKTtyZXR1cm4gdD09PW58fHQ9PT1hPzYyOnQ9PT1yfHx0PT09Zj82Mzp0PG8/LTE6dDxvKzEwP3QtbysyNisyNjp0PHUrMjY/dC11OnQ8aSsyNj90LWkrMjY6dm9pZCAwfWUudG9CeXRlQXJyYXk9ZnVuY3Rpb24oZSl7dmFyIHQsbixyLG8saTtpZigwPGUubGVuZ3RoJTQpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBzdHJpbmcuIExlbmd0aCBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgNFwiKTt2YXIgdT1lLmxlbmd0aDtvPVwiPVwiPT09ZS5jaGFyQXQodS0yKT8yOlwiPVwiPT09ZS5jaGFyQXQodS0xKT8xOjAsaT1uZXcgcygzKmUubGVuZ3RoLzQtbyksbj0wPG8/ZS5sZW5ndGgtNDplLmxlbmd0aDt2YXIgYT0wO2Z1bmN0aW9uIGYoZSl7aVthKytdPWV9Zm9yKHQ9MDt0PG47dCs9NCwzKWYoKDE2NzExNjgwJihyPWMoZS5jaGFyQXQodCkpPDwxOHxjKGUuY2hhckF0KHQrMSkpPDwxMnxjKGUuY2hhckF0KHQrMikpPDw2fGMoZS5jaGFyQXQodCszKSkpKT4+MTYpLGYoKDY1MjgwJnIpPj44KSxmKDI1NSZyKTtyZXR1cm4gMj09bz9mKDI1NSYocj1jKGUuY2hhckF0KHQpKTw8MnxjKGUuY2hhckF0KHQrMSkpPj40KSk6MT09byYmKGYoKHI9YyhlLmNoYXJBdCh0KSk8PDEwfGMoZS5jaGFyQXQodCsxKSk8PDR8YyhlLmNoYXJBdCh0KzIpKT4+Mik+PjgmMjU1KSxmKDI1NSZyKSksaX0sZS5mcm9tQnl0ZUFycmF5PWZ1bmN0aW9uKGUpe3ZhciB0LG4scixvLGk9ZS5sZW5ndGglMyx1PVwiXCI7ZnVuY3Rpb24gYShlKXtyZXR1cm5cIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky9cIi5jaGFyQXQoZSl9Zm9yKHQ9MCxyPWUubGVuZ3RoLWk7dDxyO3QrPTMpbj0oZVt0XTw8MTYpKyhlW3QrMV08PDgpK2VbdCsyXSx1Kz1hKChvPW4pPj4xOCY2MykrYShvPj4xMiY2MykrYShvPj42JjYzKSthKDYzJm8pO3N3aXRjaChpKXtjYXNlIDE6dSs9YSgobj1lW2UubGVuZ3RoLTFdKT4+MiksdSs9YShuPDw0JjYzKSx1Kz1cIj09XCI7YnJlYWs7Y2FzZSAyOnUrPWEoKG49KGVbZS5sZW5ndGgtMl08PDgpK2VbZS5sZW5ndGgtMV0pPj4xMCksdSs9YShuPj40JjYzKSx1Kz1hKG48PDImNjMpLHUrPVwiPVwifXJldHVybiB1fX0odm9pZCAwPT09cz90aGlzLmJhc2U2NGpzPXt9OnMpfSkuY2FsbCh0aGlzLGUoXCJsWXBvSTJcIiksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGY/c2VsZjpcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93P3dpbmRvdzp7fSxlKFwiYnVmZmVyXCIpLkJ1ZmZlcixhcmd1bWVudHNbM10sYXJndW1lbnRzWzRdLGFyZ3VtZW50c1s1XSxhcmd1bWVudHNbNl0sXCIvbm9kZV9tb2R1bGVzL2d1bHAtYnJvd3NlcmlmeS9ub2RlX21vZHVsZXMvYmFzZTY0LWpzL2xpYi9iNjQuanNcIixcIi9ub2RlX21vZHVsZXMvZ3VscC1icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9iYXNlNjQtanMvbGliXCIpfSx7YnVmZmVyOjMsbFlwb0kyOjEwfV0sMzpbZnVuY3Rpb24oRCxlLE8peyhmdW5jdGlvbihlLHQsZixuLHIsbyxpLHUsYSl7dmFyIHM9RChcImJhc2U2NC1qc1wiKSxjPUQoXCJpZWVlNzU0XCIpO2Z1bmN0aW9uIGYoZSx0LG4pe2lmKCEodGhpcyBpbnN0YW5jZW9mIGYpKXJldHVybiBuZXcgZihlLHQsbik7dmFyIHIsbyxpLHU9dHlwZW9mIGU7aWYoXCJiYXNlNjRcIj09PXQmJlwic3RyaW5nXCI9PXUpZm9yKGU9ZnVuY3Rpb24oZSl7cmV0dXJuIGUudHJpbT9lLnRyaW0oKTplLnJlcGxhY2UoL15cXHMrfFxccyskL2csXCJcIil9KGUpO2UubGVuZ3RoJTQhPTA7KWUrPVwiPVwiO2lmKFwibnVtYmVyXCI9PXUpcj1VKGUpO2Vsc2UgaWYoXCJzdHJpbmdcIj09dSlyPWYuYnl0ZUxlbmd0aChlLHQpO2Vsc2V7aWYoXCJvYmplY3RcIiE9dSl0aHJvdyBuZXcgRXJyb3IoXCJGaXJzdCBhcmd1bWVudCBuZWVkcyB0byBiZSBhIG51bWJlciwgYXJyYXkgb3Igc3RyaW5nLlwiKTtyPVUoZS5sZW5ndGgpfWlmKGYuX3VzZVR5cGVkQXJyYXlzP289Zi5fYXVnbWVudChuZXcgVWludDhBcnJheShyKSk6KChvPXRoaXMpLmxlbmd0aD1yLG8uX2lzQnVmZmVyPSEwKSxmLl91c2VUeXBlZEFycmF5cyYmXCJudW1iZXJcIj09dHlwZW9mIGUuYnl0ZUxlbmd0aClvLl9zZXQoZSk7ZWxzZSBpZihmdW5jdGlvbihlKXtyZXR1cm4geChlKXx8Zi5pc0J1ZmZlcihlKXx8ZSYmXCJvYmplY3RcIj09dHlwZW9mIGUmJlwibnVtYmVyXCI9PXR5cGVvZiBlLmxlbmd0aH0oZSkpZm9yKGk9MDtpPHI7aSsrKWYuaXNCdWZmZXIoZSk/b1tpXT1lLnJlYWRVSW50OChpKTpvW2ldPWVbaV07ZWxzZSBpZihcInN0cmluZ1wiPT11KW8ud3JpdGUoZSwwLHQpO2Vsc2UgaWYoXCJudW1iZXJcIj09dSYmIWYuX3VzZVR5cGVkQXJyYXlzJiYhbilmb3IoaT0wO2k8cjtpKyspb1tpXT0wO3JldHVybiBvfWZ1bmN0aW9uIGwoZSx0LG4scil7cmV0dXJuIGYuX2NoYXJzV3JpdHRlbj1rKGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1bXSxuPTA7bjxlLmxlbmd0aDtuKyspdC5wdXNoKDI1NSZlLmNoYXJDb2RlQXQobikpO3JldHVybiB0fSh0KSxlLG4scil9ZnVuY3Rpb24gZChlLHQsbil7dmFyIHI9XCJcIjtuPU1hdGgubWluKGUubGVuZ3RoLG4pO2Zvcih2YXIgbz10O288bjtvKyspcis9U3RyaW5nLmZyb21DaGFyQ29kZShlW29dKTtyZXR1cm4gcn1mdW5jdGlvbiBoKGUsdCxuLHIpe3J8fChGKFwiYm9vbGVhblwiPT10eXBlb2YgbixcIm1pc3Npbmcgb3IgaW52YWxpZCBlbmRpYW5cIiksRihudWxsIT10LFwibWlzc2luZyBvZmZzZXRcIiksRih0KzE8ZS5sZW5ndGgsXCJUcnlpbmcgdG8gcmVhZCBiZXlvbmQgYnVmZmVyIGxlbmd0aFwiKSk7dmFyIG8saT1lLmxlbmd0aDtpZighKGk8PXQpKXJldHVybiBuPyhvPWVbdF0sdCsxPGkmJihvfD1lW3QrMV08PDgpKToobz1lW3RdPDw4LHQrMTxpJiYob3w9ZVt0KzFdKSksb31mdW5jdGlvbiBwKGUsdCxuLHIpe3J8fChGKFwiYm9vbGVhblwiPT10eXBlb2YgbixcIm1pc3Npbmcgb3IgaW52YWxpZCBlbmRpYW5cIiksRihudWxsIT10LFwibWlzc2luZyBvZmZzZXRcIiksRih0KzM8ZS5sZW5ndGgsXCJUcnlpbmcgdG8gcmVhZCBiZXlvbmQgYnVmZmVyIGxlbmd0aFwiKSk7dmFyIG8saT1lLmxlbmd0aDtpZighKGk8PXQpKXJldHVybiBuPyh0KzI8aSYmKG89ZVt0KzJdPDwxNiksdCsxPGkmJihvfD1lW3QrMV08PDgpLG98PWVbdF0sdCszPGkmJihvKz1lW3QrM108PDI0Pj4+MCkpOih0KzE8aSYmKG89ZVt0KzFdPDwxNiksdCsyPGkmJihvfD1lW3QrMl08PDgpLHQrMzxpJiYob3w9ZVt0KzNdKSxvKz1lW3RdPDwyND4+PjApLG99ZnVuY3Rpb24gZyhlLHQsbixyKXtpZihyfHwoRihcImJvb2xlYW5cIj09dHlwZW9mIG4sXCJtaXNzaW5nIG9yIGludmFsaWQgZW5kaWFuXCIpLEYobnVsbCE9dCxcIm1pc3Npbmcgb2Zmc2V0XCIpLEYodCsxPGUubGVuZ3RoLFwiVHJ5aW5nIHRvIHJlYWQgYmV5b25kIGJ1ZmZlciBsZW5ndGhcIikpLCEoZS5sZW5ndGg8PXQpKXt2YXIgbz1oKGUsdCxuLCEwKTtyZXR1cm4gMzI3Njgmbz8tMSooNjU1MzUtbysxKTpvfX1mdW5jdGlvbiB5KGUsdCxuLHIpe2lmKHJ8fChGKFwiYm9vbGVhblwiPT10eXBlb2YgbixcIm1pc3Npbmcgb3IgaW52YWxpZCBlbmRpYW5cIiksRihudWxsIT10LFwibWlzc2luZyBvZmZzZXRcIiksRih0KzM8ZS5sZW5ndGgsXCJUcnlpbmcgdG8gcmVhZCBiZXlvbmQgYnVmZmVyIGxlbmd0aFwiKSksIShlLmxlbmd0aDw9dCkpe3ZhciBvPXAoZSx0LG4sITApO3JldHVybiAyMTQ3NDgzNjQ4Jm8/LTEqKDQyOTQ5NjcyOTUtbysxKTpvfX1mdW5jdGlvbiB3KGUsdCxuLHIpe3JldHVybiByfHwoRihcImJvb2xlYW5cIj09dHlwZW9mIG4sXCJtaXNzaW5nIG9yIGludmFsaWQgZW5kaWFuXCIpLEYodCszPGUubGVuZ3RoLFwiVHJ5aW5nIHRvIHJlYWQgYmV5b25kIGJ1ZmZlciBsZW5ndGhcIikpLGMucmVhZChlLHQsbiwyMyw0KX1mdW5jdGlvbiBiKGUsdCxuLHIpe3JldHVybiByfHwoRihcImJvb2xlYW5cIj09dHlwZW9mIG4sXCJtaXNzaW5nIG9yIGludmFsaWQgZW5kaWFuXCIpLEYodCs3PGUubGVuZ3RoLFwiVHJ5aW5nIHRvIHJlYWQgYmV5b25kIGJ1ZmZlciBsZW5ndGhcIikpLGMucmVhZChlLHQsbiw1Miw4KX1mdW5jdGlvbiBtKGUsdCxuLHIsbyl7b3x8KEYobnVsbCE9dCxcIm1pc3NpbmcgdmFsdWVcIiksRihcImJvb2xlYW5cIj09dHlwZW9mIHIsXCJtaXNzaW5nIG9yIGludmFsaWQgZW5kaWFuXCIpLEYobnVsbCE9bixcIm1pc3Npbmcgb2Zmc2V0XCIpLEYobisxPGUubGVuZ3RoLFwidHJ5aW5nIHRvIHdyaXRlIGJleW9uZCBidWZmZXIgbGVuZ3RoXCIpLE0odCw2NTUzNSkpO3ZhciBpPWUubGVuZ3RoO2lmKCEoaTw9bikpZm9yKHZhciB1PTAsYT1NYXRoLm1pbihpLW4sMik7dTxhO3UrKyllW24rdV09KHQmMjU1PDw4KihyP3U6MS11KSk+Pj44KihyP3U6MS11KX1mdW5jdGlvbiB2KGUsdCxuLHIsbyl7b3x8KEYobnVsbCE9dCxcIm1pc3NpbmcgdmFsdWVcIiksRihcImJvb2xlYW5cIj09dHlwZW9mIHIsXCJtaXNzaW5nIG9yIGludmFsaWQgZW5kaWFuXCIpLEYobnVsbCE9bixcIm1pc3Npbmcgb2Zmc2V0XCIpLEYobiszPGUubGVuZ3RoLFwidHJ5aW5nIHRvIHdyaXRlIGJleW9uZCBidWZmZXIgbGVuZ3RoXCIpLE0odCw0Mjk0OTY3Mjk1KSk7dmFyIGk9ZS5sZW5ndGg7aWYoIShpPD1uKSlmb3IodmFyIHU9MCxhPU1hdGgubWluKGktbiw0KTt1PGE7dSsrKWVbbit1XT10Pj4+OCoocj91OjMtdSkmMjU1fWZ1bmN0aW9uIF8oZSx0LG4scixvKXtvfHwoRihudWxsIT10LFwibWlzc2luZyB2YWx1ZVwiKSxGKFwiYm9vbGVhblwiPT10eXBlb2YgcixcIm1pc3Npbmcgb3IgaW52YWxpZCBlbmRpYW5cIiksRihudWxsIT1uLFwibWlzc2luZyBvZmZzZXRcIiksRihuKzE8ZS5sZW5ndGgsXCJUcnlpbmcgdG8gd3JpdGUgYmV5b25kIGJ1ZmZlciBsZW5ndGhcIiksTih0LDMyNzY3LC0zMjc2OCkpLGUubGVuZ3RoPD1ufHxtKGUsMDw9dD90OjY1NTM1K3QrMSxuLHIsbyl9ZnVuY3Rpb24gRShlLHQsbixyLG8pe298fChGKG51bGwhPXQsXCJtaXNzaW5nIHZhbHVlXCIpLEYoXCJib29sZWFuXCI9PXR5cGVvZiByLFwibWlzc2luZyBvciBpbnZhbGlkIGVuZGlhblwiKSxGKG51bGwhPW4sXCJtaXNzaW5nIG9mZnNldFwiKSxGKG4rMzxlLmxlbmd0aCxcIlRyeWluZyB0byB3cml0ZSBiZXlvbmQgYnVmZmVyIGxlbmd0aFwiKSxOKHQsMjE0NzQ4MzY0NywtMjE0NzQ4MzY0OCkpLGUubGVuZ3RoPD1ufHx2KGUsMDw9dD90OjQyOTQ5NjcyOTUrdCsxLG4scixvKX1mdW5jdGlvbiBJKGUsdCxuLHIsbyl7b3x8KEYobnVsbCE9dCxcIm1pc3NpbmcgdmFsdWVcIiksRihcImJvb2xlYW5cIj09dHlwZW9mIHIsXCJtaXNzaW5nIG9yIGludmFsaWQgZW5kaWFuXCIpLEYobnVsbCE9bixcIm1pc3Npbmcgb2Zmc2V0XCIpLEYobiszPGUubGVuZ3RoLFwiVHJ5aW5nIHRvIHdyaXRlIGJleW9uZCBidWZmZXIgbGVuZ3RoXCIpLFkodCwzNDAyODIzNDY2Mzg1Mjg4NmUyMiwtMzQwMjgyMzQ2NjM4NTI4ODZlMjIpKSxlLmxlbmd0aDw9bnx8Yy53cml0ZShlLHQsbixyLDIzLDQpfWZ1bmN0aW9uIEEoZSx0LG4scixvKXtvfHwoRihudWxsIT10LFwibWlzc2luZyB2YWx1ZVwiKSxGKFwiYm9vbGVhblwiPT10eXBlb2YgcixcIm1pc3Npbmcgb3IgaW52YWxpZCBlbmRpYW5cIiksRihudWxsIT1uLFwibWlzc2luZyBvZmZzZXRcIiksRihuKzc8ZS5sZW5ndGgsXCJUcnlpbmcgdG8gd3JpdGUgYmV5b25kIGJ1ZmZlciBsZW5ndGhcIiksWSh0LDE3OTc2OTMxMzQ4NjIzMTU3ZTI5MiwtMTc5NzY5MzEzNDg2MjMxNTdlMjkyKSksZS5sZW5ndGg8PW58fGMud3JpdGUoZSx0LG4sciw1Miw4KX1PLkJ1ZmZlcj1mLE8uU2xvd0J1ZmZlcj1mLE8uSU5TUEVDVF9NQVhfQllURVM9NTAsZi5wb29sU2l6ZT04MTkyLGYuX3VzZVR5cGVkQXJyYXlzPWZ1bmN0aW9uKCl7dHJ5e3ZhciBlPW5ldyBBcnJheUJ1ZmZlcigwKSx0PW5ldyBVaW50OEFycmF5KGUpO3JldHVybiB0LmZvbz1mdW5jdGlvbigpe3JldHVybiA0Mn0sNDI9PT10LmZvbygpJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LnN1YmFycmF5fWNhdGNoKGUpe3JldHVybiExfX0oKSxmLmlzRW5jb2Rpbmc9ZnVuY3Rpb24oZSl7c3dpdGNoKFN0cmluZyhlKS50b0xvd2VyQ2FzZSgpKXtjYXNlXCJoZXhcIjpjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpjYXNlXCJhc2NpaVwiOmNhc2VcImJpbmFyeVwiOmNhc2VcImJhc2U2NFwiOmNhc2VcInJhd1wiOmNhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fSxmLmlzQnVmZmVyPWZ1bmN0aW9uKGUpe3JldHVybiEobnVsbD09ZXx8IWUuX2lzQnVmZmVyKX0sZi5ieXRlTGVuZ3RoPWZ1bmN0aW9uKGUsdCl7dmFyIG47c3dpdGNoKGUrPVwiXCIsdHx8XCJ1dGY4XCIpe2Nhc2VcImhleFwiOm49ZS5sZW5ndGgvMjticmVhaztjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpuPWooZSkubGVuZ3RoO2JyZWFrO2Nhc2VcImFzY2lpXCI6Y2FzZVwiYmluYXJ5XCI6Y2FzZVwicmF3XCI6bj1lLmxlbmd0aDticmVhaztjYXNlXCJiYXNlNjRcIjpuPUMoZSkubGVuZ3RoO2JyZWFrO2Nhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOm49MiplLmxlbmd0aDticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcIlVua25vd24gZW5jb2RpbmdcIil9cmV0dXJuIG59LGYuY29uY2F0PWZ1bmN0aW9uKGUsdCl7aWYoRih4KGUpLFwiVXNhZ2U6IEJ1ZmZlci5jb25jYXQobGlzdCwgW3RvdGFsTGVuZ3RoXSlcXG5saXN0IHNob3VsZCBiZSBhbiBBcnJheS5cIiksMD09PWUubGVuZ3RoKXJldHVybiBuZXcgZigwKTtpZigxPT09ZS5sZW5ndGgpcmV0dXJuIGVbMF07dmFyIG47aWYoXCJudW1iZXJcIiE9dHlwZW9mIHQpZm9yKG49dD0wO248ZS5sZW5ndGg7bisrKXQrPWVbbl0ubGVuZ3RoO3ZhciByPW5ldyBmKHQpLG89MDtmb3Iobj0wO248ZS5sZW5ndGg7bisrKXt2YXIgaT1lW25dO2kuY29weShyLG8pLG8rPWkubGVuZ3RofXJldHVybiByfSxmLnByb3RvdHlwZS53cml0ZT1mdW5jdGlvbihlLHQsbixyKXtpZihpc0Zpbml0ZSh0KSlpc0Zpbml0ZShuKXx8KHI9bixuPXZvaWQgMCk7ZWxzZXt2YXIgbz1yO3I9dCx0PW4sbj1vfXQ9TnVtYmVyKHQpfHwwO3ZhciBpLHU9dGhpcy5sZW5ndGgtdDtzd2l0Y2gobj91PChuPU51bWJlcihuKSkmJihuPXUpOm49dSxyPVN0cmluZyhyfHxcInV0ZjhcIikudG9Mb3dlckNhc2UoKSl7Y2FzZVwiaGV4XCI6aT1mdW5jdGlvbihlLHQsbixyKXtuPU51bWJlcihuKXx8MDt2YXIgbz1lLmxlbmd0aC1uO3I/bzwocj1OdW1iZXIocikpJiYocj1vKTpyPW87dmFyIGk9dC5sZW5ndGg7RihpJTI9PTAsXCJJbnZhbGlkIGhleCBzdHJpbmdcIiksaS8yPHImJihyPWkvMik7Zm9yKHZhciB1PTA7dTxyO3UrKyl7dmFyIGE9cGFyc2VJbnQodC5zdWJzdHIoMip1LDIpLDE2KTtGKCFpc05hTihhKSxcIkludmFsaWQgaGV4IHN0cmluZ1wiKSxlW24rdV09YX1yZXR1cm4gZi5fY2hhcnNXcml0dGVuPTIqdSx1fSh0aGlzLGUsdCxuKTticmVhaztjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjppPWZ1bmN0aW9uKGUsdCxuLHIpe3JldHVybiBmLl9jaGFyc1dyaXR0ZW49ayhqKHQpLGUsbixyKX0odGhpcyxlLHQsbik7YnJlYWs7Y2FzZVwiYXNjaWlcIjppPWwodGhpcyxlLHQsbik7YnJlYWs7Y2FzZVwiYmluYXJ5XCI6aT1mdW5jdGlvbihlLHQsbixyKXtyZXR1cm4gbChlLHQsbixyKX0odGhpcyxlLHQsbik7YnJlYWs7Y2FzZVwiYmFzZTY0XCI6aT1mdW5jdGlvbihlLHQsbixyKXtyZXR1cm4gZi5fY2hhcnNXcml0dGVuPWsoQyh0KSxlLG4scil9KHRoaXMsZSx0LG4pO2JyZWFrO2Nhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOmk9ZnVuY3Rpb24oZSx0LG4scil7cmV0dXJuIGYuX2NoYXJzV3JpdHRlbj1rKGZ1bmN0aW9uKGUpe2Zvcih2YXIgdCxuLHIsbz1bXSxpPTA7aTxlLmxlbmd0aDtpKyspdD1lLmNoYXJDb2RlQXQoaSksbj10Pj44LHI9dCUyNTYsby5wdXNoKHIpLG8ucHVzaChuKTtyZXR1cm4gb30odCksZSxuLHIpfSh0aGlzLGUsdCxuKTticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcIlVua25vd24gZW5jb2RpbmdcIil9cmV0dXJuIGl9LGYucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKGUsdCxuKXt2YXIgcixvPXRoaXM7aWYoZT1TdHJpbmcoZXx8XCJ1dGY4XCIpLnRvTG93ZXJDYXNlKCksdD1OdW1iZXIodCl8fDAsKG49dm9pZCAwIT09bj9OdW1iZXIobik6bj1vLmxlbmd0aCk9PT10KXJldHVyblwiXCI7c3dpdGNoKGUpe2Nhc2VcImhleFwiOnI9ZnVuY3Rpb24oZSx0LG4pe3ZhciByPWUubGVuZ3RoOyghdHx8dDwwKSYmKHQ9MCk7KCFufHxuPDB8fHI8bikmJihuPXIpO2Zvcih2YXIgbz1cIlwiLGk9dDtpPG47aSsrKW8rPVMoZVtpXSk7cmV0dXJuIG99KG8sdCxuKTticmVhaztjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpyPWZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1cIlwiLG89XCJcIjtuPU1hdGgubWluKGUubGVuZ3RoLG4pO2Zvcih2YXIgaT10O2k8bjtpKyspZVtpXTw9MTI3PyhyKz1UKG8pK1N0cmluZy5mcm9tQ2hhckNvZGUoZVtpXSksbz1cIlwiKTpvKz1cIiVcIitlW2ldLnRvU3RyaW5nKDE2KTtyZXR1cm4gcitUKG8pfShvLHQsbik7YnJlYWs7Y2FzZVwiYXNjaWlcIjpyPWQobyx0LG4pO2JyZWFrO2Nhc2VcImJpbmFyeVwiOnI9ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBkKGUsdCxuKX0obyx0LG4pO2JyZWFrO2Nhc2VcImJhc2U2NFwiOnI9ZnVuY3Rpb24oZSx0LG4pe3JldHVybiAwPT09dCYmbj09PWUubGVuZ3RoP3MuZnJvbUJ5dGVBcnJheShlKTpzLmZyb21CeXRlQXJyYXkoZS5zbGljZSh0LG4pKX0obyx0LG4pO2JyZWFrO2Nhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOnI9ZnVuY3Rpb24oZSx0LG4pe2Zvcih2YXIgcj1lLnNsaWNlKHQsbiksbz1cIlwiLGk9MDtpPHIubGVuZ3RoO2krPTIpbys9U3RyaW5nLmZyb21DaGFyQ29kZShyW2ldKzI1NipyW2krMV0pO3JldHVybiBvfShvLHQsbik7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIGVuY29kaW5nXCIpfXJldHVybiByfSxmLnByb3RvdHlwZS50b0pTT049ZnVuY3Rpb24oKXtyZXR1cm57dHlwZTpcIkJ1ZmZlclwiLGRhdGE6QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwodGhpcy5fYXJyfHx0aGlzLDApfX0sZi5wcm90b3R5cGUuY29weT1mdW5jdGlvbihlLHQsbixyKXtpZihuPW58fDAscnx8MD09PXJ8fChyPXRoaXMubGVuZ3RoKSx0PXR8fDAsciE9PW4mJjAhPT1lLmxlbmd0aCYmMCE9PXRoaXMubGVuZ3RoKXtGKG48PXIsXCJzb3VyY2VFbmQgPCBzb3VyY2VTdGFydFwiKSxGKDA8PXQmJnQ8ZS5sZW5ndGgsXCJ0YXJnZXRTdGFydCBvdXQgb2YgYm91bmRzXCIpLEYoMDw9biYmbjx0aGlzLmxlbmd0aCxcInNvdXJjZVN0YXJ0IG91dCBvZiBib3VuZHNcIiksRigwPD1yJiZyPD10aGlzLmxlbmd0aCxcInNvdXJjZUVuZCBvdXQgb2YgYm91bmRzXCIpLHI+dGhpcy5sZW5ndGgmJihyPXRoaXMubGVuZ3RoKSxlLmxlbmd0aC10PHItbiYmKHI9ZS5sZW5ndGgtdCtuKTt2YXIgbz1yLW47aWYobzwxMDB8fCFmLl91c2VUeXBlZEFycmF5cylmb3IodmFyIGk9MDtpPG87aSsrKWVbaSt0XT10aGlzW2krbl07ZWxzZSBlLl9zZXQodGhpcy5zdWJhcnJheShuLG4rbyksdCl9fSxmLnByb3RvdHlwZS5zbGljZT1mdW5jdGlvbihlLHQpe3ZhciBuPXRoaXMubGVuZ3RoO2lmKGU9TChlLG4sMCksdD1MKHQsbixuKSxmLl91c2VUeXBlZEFycmF5cylyZXR1cm4gZi5fYXVnbWVudCh0aGlzLnN1YmFycmF5KGUsdCkpO2Zvcih2YXIgcj10LWUsbz1uZXcgZihyLHZvaWQgMCwhMCksaT0wO2k8cjtpKyspb1tpXT10aGlzW2krZV07cmV0dXJuIG99LGYucHJvdG90eXBlLmdldD1mdW5jdGlvbihlKXtyZXR1cm4gY29uc29sZS5sb2coXCIuZ2V0KCkgaXMgZGVwcmVjYXRlZC4gQWNjZXNzIHVzaW5nIGFycmF5IGluZGV4ZXMgaW5zdGVhZC5cIiksdGhpcy5yZWFkVUludDgoZSl9LGYucHJvdG90eXBlLnNldD1mdW5jdGlvbihlLHQpe3JldHVybiBjb25zb2xlLmxvZyhcIi5zZXQoKSBpcyBkZXByZWNhdGVkLiBBY2Nlc3MgdXNpbmcgYXJyYXkgaW5kZXhlcyBpbnN0ZWFkLlwiKSx0aGlzLndyaXRlVUludDgoZSx0KX0sZi5wcm90b3R5cGUucmVhZFVJbnQ4PWZ1bmN0aW9uKGUsdCl7aWYodHx8KEYobnVsbCE9ZSxcIm1pc3Npbmcgb2Zmc2V0XCIpLEYoZTx0aGlzLmxlbmd0aCxcIlRyeWluZyB0byByZWFkIGJleW9uZCBidWZmZXIgbGVuZ3RoXCIpKSwhKGU+PXRoaXMubGVuZ3RoKSlyZXR1cm4gdGhpc1tlXX0sZi5wcm90b3R5cGUucmVhZFVJbnQxNkxFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGgodGhpcyxlLCEwLHQpfSxmLnByb3RvdHlwZS5yZWFkVUludDE2QkU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gaCh0aGlzLGUsITEsdCl9LGYucHJvdG90eXBlLnJlYWRVSW50MzJMRT1mdW5jdGlvbihlLHQpe3JldHVybiBwKHRoaXMsZSwhMCx0KX0sZi5wcm90b3R5cGUucmVhZFVJbnQzMkJFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHAodGhpcyxlLCExLHQpfSxmLnByb3RvdHlwZS5yZWFkSW50OD1mdW5jdGlvbihlLHQpe2lmKHR8fChGKG51bGwhPWUsXCJtaXNzaW5nIG9mZnNldFwiKSxGKGU8dGhpcy5sZW5ndGgsXCJUcnlpbmcgdG8gcmVhZCBiZXlvbmQgYnVmZmVyIGxlbmd0aFwiKSksIShlPj10aGlzLmxlbmd0aCkpcmV0dXJuIDEyOCZ0aGlzW2VdPy0xKigyNTUtdGhpc1tlXSsxKTp0aGlzW2VdfSxmLnByb3RvdHlwZS5yZWFkSW50MTZMRT1mdW5jdGlvbihlLHQpe3JldHVybiBnKHRoaXMsZSwhMCx0KX0sZi5wcm90b3R5cGUucmVhZEludDE2QkU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZyh0aGlzLGUsITEsdCl9LGYucHJvdG90eXBlLnJlYWRJbnQzMkxFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHkodGhpcyxlLCEwLHQpfSxmLnByb3RvdHlwZS5yZWFkSW50MzJCRT1mdW5jdGlvbihlLHQpe3JldHVybiB5KHRoaXMsZSwhMSx0KX0sZi5wcm90b3R5cGUucmVhZEZsb2F0TEU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdyh0aGlzLGUsITAsdCl9LGYucHJvdG90eXBlLnJlYWRGbG9hdEJFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHcodGhpcyxlLCExLHQpfSxmLnByb3RvdHlwZS5yZWFkRG91YmxlTEU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gYih0aGlzLGUsITAsdCl9LGYucHJvdG90eXBlLnJlYWREb3VibGVCRT1mdW5jdGlvbihlLHQpe3JldHVybiBiKHRoaXMsZSwhMSx0KX0sZi5wcm90b3R5cGUud3JpdGVVSW50OD1mdW5jdGlvbihlLHQsbil7bnx8KEYobnVsbCE9ZSxcIm1pc3NpbmcgdmFsdWVcIiksRihudWxsIT10LFwibWlzc2luZyBvZmZzZXRcIiksRih0PHRoaXMubGVuZ3RoLFwidHJ5aW5nIHRvIHdyaXRlIGJleW9uZCBidWZmZXIgbGVuZ3RoXCIpLE0oZSwyNTUpKSx0Pj10aGlzLmxlbmd0aHx8KHRoaXNbdF09ZSl9LGYucHJvdG90eXBlLndyaXRlVUludDE2TEU9ZnVuY3Rpb24oZSx0LG4pe20odGhpcyxlLHQsITAsbil9LGYucHJvdG90eXBlLndyaXRlVUludDE2QkU9ZnVuY3Rpb24oZSx0LG4pe20odGhpcyxlLHQsITEsbil9LGYucHJvdG90eXBlLndyaXRlVUludDMyTEU9ZnVuY3Rpb24oZSx0LG4pe3YodGhpcyxlLHQsITAsbil9LGYucHJvdG90eXBlLndyaXRlVUludDMyQkU9ZnVuY3Rpb24oZSx0LG4pe3YodGhpcyxlLHQsITEsbil9LGYucHJvdG90eXBlLndyaXRlSW50OD1mdW5jdGlvbihlLHQsbil7bnx8KEYobnVsbCE9ZSxcIm1pc3NpbmcgdmFsdWVcIiksRihudWxsIT10LFwibWlzc2luZyBvZmZzZXRcIiksRih0PHRoaXMubGVuZ3RoLFwiVHJ5aW5nIHRvIHdyaXRlIGJleW9uZCBidWZmZXIgbGVuZ3RoXCIpLE4oZSwxMjcsLTEyOCkpLHQ+PXRoaXMubGVuZ3RofHwoMDw9ZT90aGlzLndyaXRlVUludDgoZSx0LG4pOnRoaXMud3JpdGVVSW50OCgyNTUrZSsxLHQsbikpfSxmLnByb3RvdHlwZS53cml0ZUludDE2TEU9ZnVuY3Rpb24oZSx0LG4pe18odGhpcyxlLHQsITAsbil9LGYucHJvdG90eXBlLndyaXRlSW50MTZCRT1mdW5jdGlvbihlLHQsbil7Xyh0aGlzLGUsdCwhMSxuKX0sZi5wcm90b3R5cGUud3JpdGVJbnQzMkxFPWZ1bmN0aW9uKGUsdCxuKXtFKHRoaXMsZSx0LCEwLG4pfSxmLnByb3RvdHlwZS53cml0ZUludDMyQkU9ZnVuY3Rpb24oZSx0LG4pe0UodGhpcyxlLHQsITEsbil9LGYucHJvdG90eXBlLndyaXRlRmxvYXRMRT1mdW5jdGlvbihlLHQsbil7SSh0aGlzLGUsdCwhMCxuKX0sZi5wcm90b3R5cGUud3JpdGVGbG9hdEJFPWZ1bmN0aW9uKGUsdCxuKXtJKHRoaXMsZSx0LCExLG4pfSxmLnByb3RvdHlwZS53cml0ZURvdWJsZUxFPWZ1bmN0aW9uKGUsdCxuKXtBKHRoaXMsZSx0LCEwLG4pfSxmLnByb3RvdHlwZS53cml0ZURvdWJsZUJFPWZ1bmN0aW9uKGUsdCxuKXtBKHRoaXMsZSx0LCExLG4pfSxmLnByb3RvdHlwZS5maWxsPWZ1bmN0aW9uKGUsdCxuKXtpZihlPWV8fDAsdD10fHwwLG49bnx8dGhpcy5sZW5ndGgsXCJzdHJpbmdcIj09dHlwZW9mIGUmJihlPWUuY2hhckNvZGVBdCgwKSksRihcIm51bWJlclwiPT10eXBlb2YgZSYmIWlzTmFOKGUpLFwidmFsdWUgaXMgbm90IGEgbnVtYmVyXCIpLEYodDw9bixcImVuZCA8IHN0YXJ0XCIpLG4hPT10JiYwIT09dGhpcy5sZW5ndGgpe0YoMDw9dCYmdDx0aGlzLmxlbmd0aCxcInN0YXJ0IG91dCBvZiBib3VuZHNcIiksRigwPD1uJiZuPD10aGlzLmxlbmd0aCxcImVuZCBvdXQgb2YgYm91bmRzXCIpO2Zvcih2YXIgcj10O3I8bjtyKyspdGhpc1tyXT1lfX0sZi5wcm90b3R5cGUuaW5zcGVjdD1mdW5jdGlvbigpe2Zvcih2YXIgZT1bXSx0PXRoaXMubGVuZ3RoLG49MDtuPHQ7bisrKWlmKGVbbl09Uyh0aGlzW25dKSxuPT09Ty5JTlNQRUNUX01BWF9CWVRFUyl7ZVtuKzFdPVwiLi4uXCI7YnJlYWt9cmV0dXJuXCI8QnVmZmVyIFwiK2Uuam9pbihcIiBcIikrXCI+XCJ9LGYucHJvdG90eXBlLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgVWludDhBcnJheSl0aHJvdyBuZXcgRXJyb3IoXCJCdWZmZXIudG9BcnJheUJ1ZmZlciBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtpZihmLl91c2VUeXBlZEFycmF5cylyZXR1cm4gbmV3IGYodGhpcykuYnVmZmVyO2Zvcih2YXIgZT1uZXcgVWludDhBcnJheSh0aGlzLmxlbmd0aCksdD0wLG49ZS5sZW5ndGg7dDxuO3QrPTEpZVt0XT10aGlzW3RdO3JldHVybiBlLmJ1ZmZlcn07dmFyIEI9Zi5wcm90b3R5cGU7ZnVuY3Rpb24gTChlLHQsbil7cmV0dXJuXCJudW1iZXJcIiE9dHlwZW9mIGU/bjp0PD0oZT1+fmUpP3Q6MDw9ZT9lOjA8PShlKz10KT9lOjB9ZnVuY3Rpb24gVShlKXtyZXR1cm4oZT1+fk1hdGguY2VpbCgrZSkpPDA/MDplfWZ1bmN0aW9uIHgoZSl7cmV0dXJuKEFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKGUpe3JldHVyblwiW29iamVjdCBBcnJheV1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKX0pKGUpfWZ1bmN0aW9uIFMoZSl7cmV0dXJuIGU8MTY/XCIwXCIrZS50b1N0cmluZygxNik6ZS50b1N0cmluZygxNil9ZnVuY3Rpb24gaihlKXtmb3IodmFyIHQ9W10sbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgcj1lLmNoYXJDb2RlQXQobik7aWYocjw9MTI3KXQucHVzaChlLmNoYXJDb2RlQXQobikpO2Vsc2V7dmFyIG89bjs1NTI5Njw9ciYmcjw9NTczNDMmJm4rKztmb3IodmFyIGk9ZW5jb2RlVVJJQ29tcG9uZW50KGUuc2xpY2UobyxuKzEpKS5zdWJzdHIoMSkuc3BsaXQoXCIlXCIpLHU9MDt1PGkubGVuZ3RoO3UrKyl0LnB1c2gocGFyc2VJbnQoaVt1XSwxNikpfX1yZXR1cm4gdH1mdW5jdGlvbiBDKGUpe3JldHVybiBzLnRvQnl0ZUFycmF5KGUpfWZ1bmN0aW9uIGsoZSx0LG4scil7Zm9yKHZhciBvPTA7bzxyJiYhKG8rbj49dC5sZW5ndGh8fG8+PWUubGVuZ3RoKTtvKyspdFtvK25dPWVbb107cmV0dXJuIG99ZnVuY3Rpb24gVChlKXt0cnl7cmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChlKX1jYXRjaChlKXtyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZSg2NTUzMyl9fWZ1bmN0aW9uIE0oZSx0KXtGKFwibnVtYmVyXCI9PXR5cGVvZiBlLFwiY2Fubm90IHdyaXRlIGEgbm9uLW51bWJlciBhcyBhIG51bWJlclwiKSxGKDA8PWUsXCJzcGVjaWZpZWQgYSBuZWdhdGl2ZSB2YWx1ZSBmb3Igd3JpdGluZyBhbiB1bnNpZ25lZCB2YWx1ZVwiKSxGKGU8PXQsXCJ2YWx1ZSBpcyBsYXJnZXIgdGhhbiBtYXhpbXVtIHZhbHVlIGZvciB0eXBlXCIpLEYoTWF0aC5mbG9vcihlKT09PWUsXCJ2YWx1ZSBoYXMgYSBmcmFjdGlvbmFsIGNvbXBvbmVudFwiKX1mdW5jdGlvbiBOKGUsdCxuKXtGKFwibnVtYmVyXCI9PXR5cGVvZiBlLFwiY2Fubm90IHdyaXRlIGEgbm9uLW51bWJlciBhcyBhIG51bWJlclwiKSxGKGU8PXQsXCJ2YWx1ZSBsYXJnZXIgdGhhbiBtYXhpbXVtIGFsbG93ZWQgdmFsdWVcIiksRihuPD1lLFwidmFsdWUgc21hbGxlciB0aGFuIG1pbmltdW0gYWxsb3dlZCB2YWx1ZVwiKSxGKE1hdGguZmxvb3IoZSk9PT1lLFwidmFsdWUgaGFzIGEgZnJhY3Rpb25hbCBjb21wb25lbnRcIil9ZnVuY3Rpb24gWShlLHQsbil7RihcIm51bWJlclwiPT10eXBlb2YgZSxcImNhbm5vdCB3cml0ZSBhIG5vbi1udW1iZXIgYXMgYSBudW1iZXJcIiksRihlPD10LFwidmFsdWUgbGFyZ2VyIHRoYW4gbWF4aW11bSBhbGxvd2VkIHZhbHVlXCIpLEYobjw9ZSxcInZhbHVlIHNtYWxsZXIgdGhhbiBtaW5pbXVtIGFsbG93ZWQgdmFsdWVcIil9ZnVuY3Rpb24gRihlLHQpe2lmKCFlKXRocm93IG5ldyBFcnJvcih0fHxcIkZhaWxlZCBhc3NlcnRpb25cIil9Zi5fYXVnbWVudD1mdW5jdGlvbihlKXtyZXR1cm4gZS5faXNCdWZmZXI9ITAsZS5fZ2V0PWUuZ2V0LGUuX3NldD1lLnNldCxlLmdldD1CLmdldCxlLnNldD1CLnNldCxlLndyaXRlPUIud3JpdGUsZS50b1N0cmluZz1CLnRvU3RyaW5nLGUudG9Mb2NhbGVTdHJpbmc9Qi50b1N0cmluZyxlLnRvSlNPTj1CLnRvSlNPTixlLmNvcHk9Qi5jb3B5LGUuc2xpY2U9Qi5zbGljZSxlLnJlYWRVSW50OD1CLnJlYWRVSW50OCxlLnJlYWRVSW50MTZMRT1CLnJlYWRVSW50MTZMRSxlLnJlYWRVSW50MTZCRT1CLnJlYWRVSW50MTZCRSxlLnJlYWRVSW50MzJMRT1CLnJlYWRVSW50MzJMRSxlLnJlYWRVSW50MzJCRT1CLnJlYWRVSW50MzJCRSxlLnJlYWRJbnQ4PUIucmVhZEludDgsZS5yZWFkSW50MTZMRT1CLnJlYWRJbnQxNkxFLGUucmVhZEludDE2QkU9Qi5yZWFkSW50MTZCRSxlLnJlYWRJbnQzMkxFPUIucmVhZEludDMyTEUsZS5yZWFkSW50MzJCRT1CLnJlYWRJbnQzMkJFLGUucmVhZEZsb2F0TEU9Qi5yZWFkRmxvYXRMRSxlLnJlYWRGbG9hdEJFPUIucmVhZEZsb2F0QkUsZS5yZWFkRG91YmxlTEU9Qi5yZWFkRG91YmxlTEUsZS5yZWFkRG91YmxlQkU9Qi5yZWFkRG91YmxlQkUsZS53cml0ZVVJbnQ4PUIud3JpdGVVSW50OCxlLndyaXRlVUludDE2TEU9Qi53cml0ZVVJbnQxNkxFLGUud3JpdGVVSW50MTZCRT1CLndyaXRlVUludDE2QkUsZS53cml0ZVVJbnQzMkxFPUIud3JpdGVVSW50MzJMRSxlLndyaXRlVUludDMyQkU9Qi53cml0ZVVJbnQzMkJFLGUud3JpdGVJbnQ4PUIud3JpdGVJbnQ4LGUud3JpdGVJbnQxNkxFPUIud3JpdGVJbnQxNkxFLGUud3JpdGVJbnQxNkJFPUIud3JpdGVJbnQxNkJFLGUud3JpdGVJbnQzMkxFPUIud3JpdGVJbnQzMkxFLGUud3JpdGVJbnQzMkJFPUIud3JpdGVJbnQzMkJFLGUud3JpdGVGbG9hdExFPUIud3JpdGVGbG9hdExFLGUud3JpdGVGbG9hdEJFPUIud3JpdGVGbG9hdEJFLGUud3JpdGVEb3VibGVMRT1CLndyaXRlRG91YmxlTEUsZS53cml0ZURvdWJsZUJFPUIud3JpdGVEb3VibGVCRSxlLmZpbGw9Qi5maWxsLGUuaW5zcGVjdD1CLmluc3BlY3QsZS50b0FycmF5QnVmZmVyPUIudG9BcnJheUJ1ZmZlcixlfX0pLmNhbGwodGhpcyxEKFwibFlwb0kyXCIpLFwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmP3NlbGY6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6e30sRChcImJ1ZmZlclwiKS5CdWZmZXIsYXJndW1lbnRzWzNdLGFyZ3VtZW50c1s0XSxhcmd1bWVudHNbNV0sYXJndW1lbnRzWzZdLFwiL25vZGVfbW9kdWxlcy9ndWxwLWJyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2J1ZmZlci9pbmRleC5qc1wiLFwiL25vZGVfbW9kdWxlcy9ndWxwLWJyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2J1ZmZlclwiKX0se1wiYmFzZTY0LWpzXCI6MixidWZmZXI6MyxpZWVlNzU0OjExLGxZcG9JMjoxMH1dLDQ6W2Z1bmN0aW9uKGwsZCxlKXsoZnVuY3Rpb24oZSx0LHUsbixyLG8saSxhLGYpe3U9bChcImJ1ZmZlclwiKS5CdWZmZXI7dmFyIHM9NCxjPW5ldyB1KHMpO2MuZmlsbCgwKTtkLmV4cG9ydHM9e2hhc2g6ZnVuY3Rpb24oZSx0LG4scil7cmV0dXJuIHUuaXNCdWZmZXIoZSl8fChlPW5ldyB1KGUpKSxmdW5jdGlvbihlLHQsbil7Zm9yKHZhciByPW5ldyB1KHQpLG89bj9yLndyaXRlSW50MzJCRTpyLndyaXRlSW50MzJMRSxpPTA7aTxlLmxlbmd0aDtpKyspby5jYWxsKHIsZVtpXSw0KmksITApO3JldHVybiByfSh0KGZ1bmN0aW9uKGUsdCl7aWYoZS5sZW5ndGglcyE9MCl7dmFyIG49ZS5sZW5ndGgrKHMtZS5sZW5ndGglcyk7ZT11LmNvbmNhdChbZSxjXSxuKX1mb3IodmFyIHI9W10sbz10P2UucmVhZEludDMyQkU6ZS5yZWFkSW50MzJMRSxpPTA7aTxlLmxlbmd0aDtpKz1zKXIucHVzaChvLmNhbGwoZSxpKSk7cmV0dXJuIHJ9KGUsciksOCplLmxlbmd0aCksbixyKX19fSkuY2FsbCh0aGlzLGwoXCJsWXBvSTJcIiksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGY/c2VsZjpcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93P3dpbmRvdzp7fSxsKFwiYnVmZmVyXCIpLkJ1ZmZlcixhcmd1bWVudHNbM10sYXJndW1lbnRzWzRdLGFyZ3VtZW50c1s1XSxhcmd1bWVudHNbNl0sXCIvbm9kZV9tb2R1bGVzL2d1bHAtYnJvd3NlcmlmeS9ub2RlX21vZHVsZXMvY3J5cHRvLWJyb3dzZXJpZnkvaGVscGVycy5qc1wiLFwiL25vZGVfbW9kdWxlcy9ndWxwLWJyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2NyeXB0by1icm93c2VyaWZ5XCIpfSx7YnVmZmVyOjMsbFlwb0kyOjEwfV0sNTpbZnVuY3Rpb24odyxlLGIpeyhmdW5jdGlvbihlLHQsYSxuLHIsbyxpLHUsZil7YT13KFwiYnVmZmVyXCIpLkJ1ZmZlcjt2YXIgcz13KFwiLi9zaGFcIiksYz13KFwiLi9zaGEyNTZcIiksbD13KFwiLi9ybmdcIiksZD17c2hhMTpzLHNoYTI1NjpjLG1kNTp3KFwiLi9tZDVcIil9LGg9NjQscD1uZXcgYShoKTtmdW5jdGlvbiBnKGUscil7dmFyIG89ZFtlPWV8fFwic2hhMVwiXSxpPVtdO3JldHVybiBvfHx5KFwiYWxnb3JpdGhtOlwiLGUsXCJpcyBub3QgeWV0IHN1cHBvcnRlZFwiKSx7dXBkYXRlOmZ1bmN0aW9uKGUpe3JldHVybiBhLmlzQnVmZmVyKGUpfHwoZT1uZXcgYShlKSksaS5wdXNoKGUpLGUubGVuZ3RoLHRoaXN9LGRpZ2VzdDpmdW5jdGlvbihlKXt2YXIgdD1hLmNvbmNhdChpKSxuPXI/ZnVuY3Rpb24oZSx0LG4pe2EuaXNCdWZmZXIodCl8fCh0PW5ldyBhKHQpKSxhLmlzQnVmZmVyKG4pfHwobj1uZXcgYShuKSksdC5sZW5ndGg+aD90PWUodCk6dC5sZW5ndGg8aCYmKHQ9YS5jb25jYXQoW3QscF0saCkpO2Zvcih2YXIgcj1uZXcgYShoKSxvPW5ldyBhKGgpLGk9MDtpPGg7aSsrKXJbaV09NTRedFtpXSxvW2ldPTkyXnRbaV07dmFyIHU9ZShhLmNvbmNhdChbcixuXSkpO3JldHVybiBlKGEuY29uY2F0KFtvLHVdKSl9KG8scix0KTpvKHQpO3JldHVybiBpPW51bGwsZT9uLnRvU3RyaW5nKGUpOm59fX1mdW5jdGlvbiB5KCl7dmFyIGU9W10uc2xpY2UuY2FsbChhcmd1bWVudHMpLmpvaW4oXCIgXCIpO3Rocm93IG5ldyBFcnJvcihbZSxcIndlIGFjY2VwdCBwdWxsIHJlcXVlc3RzXCIsXCJodHRwOi8vZ2l0aHViLmNvbS9kb21pbmljdGFyci9jcnlwdG8tYnJvd3NlcmlmeVwiXS5qb2luKFwiXFxuXCIpKX1wLmZpbGwoMCksYi5jcmVhdGVIYXNoPWZ1bmN0aW9uKGUpe3JldHVybiBnKGUpfSxiLmNyZWF0ZUhtYWM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZyhlLHQpfSxiLnJhbmRvbUJ5dGVzPWZ1bmN0aW9uKGUsdCl7aWYoIXR8fCF0LmNhbGwpcmV0dXJuIG5ldyBhKGwoZSkpO3RyeXt0LmNhbGwodGhpcyx2b2lkIDAsbmV3IGEobChlKSkpfWNhdGNoKGUpe3QoZSl9fSxmdW5jdGlvbihlLHQpe2Zvcih2YXIgbiBpbiBlKXQoZVtuXSxuKX0oW1wiY3JlYXRlQ3JlZGVudGlhbHNcIixcImNyZWF0ZUNpcGhlclwiLFwiY3JlYXRlQ2lwaGVyaXZcIixcImNyZWF0ZURlY2lwaGVyXCIsXCJjcmVhdGVEZWNpcGhlcml2XCIsXCJjcmVhdGVTaWduXCIsXCJjcmVhdGVWZXJpZnlcIixcImNyZWF0ZURpZmZpZUhlbGxtYW5cIixcInBia2RmMlwiXSxmdW5jdGlvbihlKXtiW2VdPWZ1bmN0aW9uKCl7eShcInNvcnJ5LFwiLGUsXCJpcyBub3QgaW1wbGVtZW50ZWQgeWV0XCIpfX0pfSkuY2FsbCh0aGlzLHcoXCJsWXBvSTJcIiksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGY/c2VsZjpcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93P3dpbmRvdzp7fSx3KFwiYnVmZmVyXCIpLkJ1ZmZlcixhcmd1bWVudHNbM10sYXJndW1lbnRzWzRdLGFyZ3VtZW50c1s1XSxhcmd1bWVudHNbNl0sXCIvbm9kZV9tb2R1bGVzL2d1bHAtYnJvd3NlcmlmeS9ub2RlX21vZHVsZXMvY3J5cHRvLWJyb3dzZXJpZnkvaW5kZXguanNcIixcIi9ub2RlX21vZHVsZXMvZ3VscC1icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9jcnlwdG8tYnJvd3NlcmlmeVwiKX0se1wiLi9tZDVcIjo2LFwiLi9ybmdcIjo3LFwiLi9zaGFcIjo4LFwiLi9zaGEyNTZcIjo5LGJ1ZmZlcjozLGxZcG9JMjoxMH1dLDY6W2Z1bmN0aW9uKHcsYixlKXsoZnVuY3Rpb24oZSx0LG4scixvLGksdSxhLGYpe3ZhciBzPXcoXCIuL2hlbHBlcnNcIik7ZnVuY3Rpb24gYyhlLHQpe2VbdD4+NV18PTEyODw8dCUzMixlWzE0Kyh0KzY0Pj4+OTw8NCldPXQ7Zm9yKHZhciBuPTE3MzI1ODQxOTMscj0tMjcxNzMzODc5LG89LTE3MzI1ODQxOTQsaT0yNzE3MzM4NzgsdT0wO3U8ZS5sZW5ndGg7dSs9MTYpe3ZhciBhPW4sZj1yLHM9byxjPWk7cj1nKHI9ZyhyPWcocj1nKHI9cChyPXAocj1wKHI9cChyPWgocj1oKHI9aChyPWgocj1kKHI9ZChyPWQocj1kKHIsbz1kKG8saT1kKGksbj1kKG4scixvLGksZVt1KzBdLDcsLTY4MDg3NjkzNikscixvLGVbdSsxXSwxMiwtMzg5NTY0NTg2KSxuLHIsZVt1KzJdLDE3LDYwNjEwNTgxOSksaSxuLGVbdSszXSwyMiwtMTA0NDUyNTMzMCksbz1kKG8saT1kKGksbj1kKG4scixvLGksZVt1KzRdLDcsLTE3NjQxODg5NykscixvLGVbdSs1XSwxMiwxMjAwMDgwNDI2KSxuLHIsZVt1KzZdLDE3LC0xNDczMjMxMzQxKSxpLG4sZVt1KzddLDIyLC00NTcwNTk4Myksbz1kKG8saT1kKGksbj1kKG4scixvLGksZVt1KzhdLDcsMTc3MDAzNTQxNikscixvLGVbdSs5XSwxMiwtMTk1ODQxNDQxNyksbixyLGVbdSsxMF0sMTcsLTQyMDYzKSxpLG4sZVt1KzExXSwyMiwtMTk5MDQwNDE2Miksbz1kKG8saT1kKGksbj1kKG4scixvLGksZVt1KzEyXSw3LDE4MDQ2MDM2ODIpLHIsbyxlW3UrMTNdLDEyLC00MDM0MTEwMSksbixyLGVbdSsxNF0sMTcsLTE1MDIwMDIyOTApLGksbixlW3UrMTVdLDIyLDEyMzY1MzUzMjkpLG89aChvLGk9aChpLG49aChuLHIsbyxpLGVbdSsxXSw1LC0xNjU3OTY1MTApLHIsbyxlW3UrNl0sOSwtMTA2OTUwMTYzMiksbixyLGVbdSsxMV0sMTQsNjQzNzE3NzEzKSxpLG4sZVt1KzBdLDIwLC0zNzM4OTczMDIpLG89aChvLGk9aChpLG49aChuLHIsbyxpLGVbdSs1XSw1LC03MDE1NTg2OTEpLHIsbyxlW3UrMTBdLDksMzgwMTYwODMpLG4scixlW3UrMTVdLDE0LC02NjA0NzgzMzUpLGksbixlW3UrNF0sMjAsLTQwNTUzNzg0OCksbz1oKG8saT1oKGksbj1oKG4scixvLGksZVt1KzldLDUsNTY4NDQ2NDM4KSxyLG8sZVt1KzE0XSw5LC0xMDE5ODAzNjkwKSxuLHIsZVt1KzNdLDE0LC0xODczNjM5NjEpLGksbixlW3UrOF0sMjAsMTE2MzUzMTUwMSksbz1oKG8saT1oKGksbj1oKG4scixvLGksZVt1KzEzXSw1LC0xNDQ0NjgxNDY3KSxyLG8sZVt1KzJdLDksLTUxNDAzNzg0KSxuLHIsZVt1KzddLDE0LDE3MzUzMjg0NzMpLGksbixlW3UrMTJdLDIwLC0xOTI2NjA3NzM0KSxvPXAobyxpPXAoaSxuPXAobixyLG8saSxlW3UrNV0sNCwtMzc4NTU4KSxyLG8sZVt1KzhdLDExLC0yMDIyNTc0NDYzKSxuLHIsZVt1KzExXSwxNiwxODM5MDMwNTYyKSxpLG4sZVt1KzE0XSwyMywtMzUzMDk1NTYpLG89cChvLGk9cChpLG49cChuLHIsbyxpLGVbdSsxXSw0LC0xNTMwOTkyMDYwKSxyLG8sZVt1KzRdLDExLDEyNzI4OTMzNTMpLG4scixlW3UrN10sMTYsLTE1NTQ5NzYzMiksaSxuLGVbdSsxMF0sMjMsLTEwOTQ3MzA2NDApLG89cChvLGk9cChpLG49cChuLHIsbyxpLGVbdSsxM10sNCw2ODEyNzkxNzQpLHIsbyxlW3UrMF0sMTEsLTM1ODUzNzIyMiksbixyLGVbdSszXSwxNiwtNzIyNTIxOTc5KSxpLG4sZVt1KzZdLDIzLDc2MDI5MTg5KSxvPXAobyxpPXAoaSxuPXAobixyLG8saSxlW3UrOV0sNCwtNjQwMzY0NDg3KSxyLG8sZVt1KzEyXSwxMSwtNDIxODE1ODM1KSxuLHIsZVt1KzE1XSwxNiw1MzA3NDI1MjApLGksbixlW3UrMl0sMjMsLTk5NTMzODY1MSksbz1nKG8saT1nKGksbj1nKG4scixvLGksZVt1KzBdLDYsLTE5ODYzMDg0NCkscixvLGVbdSs3XSwxMCwxMTI2ODkxNDE1KSxuLHIsZVt1KzE0XSwxNSwtMTQxNjM1NDkwNSksaSxuLGVbdSs1XSwyMSwtNTc0MzQwNTUpLG89ZyhvLGk9ZyhpLG49ZyhuLHIsbyxpLGVbdSsxMl0sNiwxNzAwNDg1NTcxKSxyLG8sZVt1KzNdLDEwLC0xODk0OTg2NjA2KSxuLHIsZVt1KzEwXSwxNSwtMTA1MTUyMyksaSxuLGVbdSsxXSwyMSwtMjA1NDkyMjc5OSksbz1nKG8saT1nKGksbj1nKG4scixvLGksZVt1KzhdLDYsMTg3MzMxMzM1OSkscixvLGVbdSsxNV0sMTAsLTMwNjExNzQ0KSxuLHIsZVt1KzZdLDE1LC0xNTYwMTk4MzgwKSxpLG4sZVt1KzEzXSwyMSwxMzA5MTUxNjQ5KSxvPWcobyxpPWcoaSxuPWcobixyLG8saSxlW3UrNF0sNiwtMTQ1NTIzMDcwKSxyLG8sZVt1KzExXSwxMCwtMTEyMDIxMDM3OSksbixyLGVbdSsyXSwxNSw3MTg3ODcyNTkpLGksbixlW3UrOV0sMjEsLTM0MzQ4NTU1MSksbj15KG4sYSkscj15KHIsZiksbz15KG8scyksaT15KGksYyl9cmV0dXJuIEFycmF5KG4scixvLGkpfWZ1bmN0aW9uIGwoZSx0LG4scixvLGkpe3JldHVybiB5KGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU8PHR8ZT4+PjMyLXR9KHkoeSh0LGUpLHkocixpKSksbyksbil9ZnVuY3Rpb24gZChlLHQsbixyLG8saSx1KXtyZXR1cm4gbCh0Jm58fnQmcixlLHQsbyxpLHUpfWZ1bmN0aW9uIGgoZSx0LG4scixvLGksdSl7cmV0dXJuIGwodCZyfG4mfnIsZSx0LG8saSx1KX1mdW5jdGlvbiBwKGUsdCxuLHIsbyxpLHUpe3JldHVybiBsKHRebl5yLGUsdCxvLGksdSl9ZnVuY3Rpb24gZyhlLHQsbixyLG8saSx1KXtyZXR1cm4gbChuXih0fH5yKSxlLHQsbyxpLHUpfWZ1bmN0aW9uIHkoZSx0KXt2YXIgbj0oNjU1MzUmZSkrKDY1NTM1JnQpO3JldHVybihlPj4xNikrKHQ+PjE2KSsobj4+MTYpPDwxNnw2NTUzNSZufWIuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gcy5oYXNoKGUsYywxNil9fSkuY2FsbCh0aGlzLHcoXCJsWXBvSTJcIiksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGY/c2VsZjpcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93P3dpbmRvdzp7fSx3KFwiYnVmZmVyXCIpLkJ1ZmZlcixhcmd1bWVudHNbM10sYXJndW1lbnRzWzRdLGFyZ3VtZW50c1s1XSxhcmd1bWVudHNbNl0sXCIvbm9kZV9tb2R1bGVzL2d1bHAtYnJvd3NlcmlmeS9ub2RlX21vZHVsZXMvY3J5cHRvLWJyb3dzZXJpZnkvbWQ1LmpzXCIsXCIvbm9kZV9tb2R1bGVzL2d1bHAtYnJvd3NlcmlmeS9ub2RlX21vZHVsZXMvY3J5cHRvLWJyb3dzZXJpZnlcIil9LHtcIi4vaGVscGVyc1wiOjQsYnVmZmVyOjMsbFlwb0kyOjEwfV0sNzpbZnVuY3Rpb24oZSxzLHQpeyhmdW5jdGlvbihlLHQsbixyLG8saSx1LGEsZil7IWZ1bmN0aW9uKCl7dmFyIGUsdDtlPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdCxuPW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKykwPT0oMyZyKSYmKHQ9NDI5NDk2NzI5NipNYXRoLnJhbmRvbSgpKSxuW3JdPXQ+Pj4oKDMmcik8PDMpJjI1NTtyZXR1cm4gbn0sdGhpcy5jcnlwdG8mJmNyeXB0by5nZXRSYW5kb21WYWx1ZXMmJih0PWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBVaW50OEFycmF5KGUpO3JldHVybiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKHQpLHR9KSxzLmV4cG9ydHM9dHx8ZX0oKX0pLmNhbGwodGhpcyxlKFwibFlwb0kyXCIpLFwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmP3NlbGY6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6e30sZShcImJ1ZmZlclwiKS5CdWZmZXIsYXJndW1lbnRzWzNdLGFyZ3VtZW50c1s0XSxhcmd1bWVudHNbNV0sYXJndW1lbnRzWzZdLFwiL25vZGVfbW9kdWxlcy9ndWxwLWJyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2NyeXB0by1icm93c2VyaWZ5L3JuZy5qc1wiLFwiL25vZGVfbW9kdWxlcy9ndWxwLWJyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2NyeXB0by1icm93c2VyaWZ5XCIpfSx7YnVmZmVyOjMsbFlwb0kyOjEwfV0sODpbZnVuY3Rpb24obCxkLGUpeyhmdW5jdGlvbihlLHQsbixyLG8saSx1LGEsZil7dmFyIHM9bChcIi4vaGVscGVyc1wiKTtmdW5jdGlvbiBjKGUsdCl7ZVt0Pj41XXw9MTI4PDwyNC10JTMyLGVbMTUrKHQrNjQ+Pjk8PDQpXT10O2Zvcih2YXIgbixyPUFycmF5KDgwKSxvPTE3MzI1ODQxOTMsaT0tMjcxNzMzODc5LHU9LTE3MzI1ODQxOTQsYT0yNzE3MzM4NzgsZj0tMTAwOTU4OTc3NixzPTA7czxlLmxlbmd0aDtzKz0xNil7Zm9yKHZhciBjPW8sbD1pLGQ9dSxoPWEscD1mLGc9MDtnPDgwO2crKyl7cltnXT1nPDE2P2VbcytnXTptKHJbZy0zXV5yW2ctOF1ecltnLTE0XV5yW2ctMTZdLDEpO3ZhciB5PWIoYihtKG8sNSksdyhnLGksdSxhKSksYihiKGYscltnXSksKG49Zyk8MjA/MTUxODUwMDI0OTpuPDQwPzE4NTk3NzUzOTM6bjw2MD8tMTg5NDAwNzU4ODotODk5NDk3NTE0KSk7Zj1hLGE9dSx1PW0oaSwzMCksaT1vLG89eX1vPWIobyxjKSxpPWIoaSxsKSx1PWIodSxkKSxhPWIoYSxoKSxmPWIoZixwKX1yZXR1cm4gQXJyYXkobyxpLHUsYSxmKX1mdW5jdGlvbiB3KGUsdCxuLHIpe3JldHVybiBlPDIwP3Qmbnx+dCZyOmU8NDA/dF5uXnI6ZTw2MD90Jm58dCZyfG4mcjp0Xm5ecn1mdW5jdGlvbiBiKGUsdCl7dmFyIG49KDY1NTM1JmUpKyg2NTUzNSZ0KTtyZXR1cm4oZT4+MTYpKyh0Pj4xNikrKG4+PjE2KTw8MTZ8NjU1MzUmbn1mdW5jdGlvbiBtKGUsdCl7cmV0dXJuIGU8PHR8ZT4+PjMyLXR9ZC5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBzLmhhc2goZSxjLDIwLCEwKX19KS5jYWxsKHRoaXMsbChcImxZcG9JMlwiKSxcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZj9zZWxmOlwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3c/d2luZG93Ont9LGwoXCJidWZmZXJcIikuQnVmZmVyLGFyZ3VtZW50c1szXSxhcmd1bWVudHNbNF0sYXJndW1lbnRzWzVdLGFyZ3VtZW50c1s2XSxcIi9ub2RlX21vZHVsZXMvZ3VscC1icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9jcnlwdG8tYnJvd3NlcmlmeS9zaGEuanNcIixcIi9ub2RlX21vZHVsZXMvZ3VscC1icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9jcnlwdG8tYnJvd3NlcmlmeVwiKX0se1wiLi9oZWxwZXJzXCI6NCxidWZmZXI6MyxsWXBvSTI6MTB9XSw5OltmdW5jdGlvbihsLGQsZSl7KGZ1bmN0aW9uKGUsdCxuLHIsbyxpLHUsYSxmKXtmdW5jdGlvbiBCKGUsdCl7dmFyIG49KDY1NTM1JmUpKyg2NTUzNSZ0KTtyZXR1cm4oZT4+MTYpKyh0Pj4xNikrKG4+PjE2KTw8MTZ8NjU1MzUmbn1mdW5jdGlvbiBMKGUsdCl7cmV0dXJuIGU+Pj50fGU8PDMyLXR9ZnVuY3Rpb24gVShlLHQpe3JldHVybiBlPj4+dH1mdW5jdGlvbiBzKGUsdCl7dmFyIG4scixvLGksdSxhLGYscyxjLGwsZCxoLHAsZyx5LHcsYixtLHY9bmV3IEFycmF5KDExMTYzNTI0MDgsMTg5OTQ0NzQ0MSwzMDQ5MzIzNDcxLDM5MjEwMDk1NzMsOTYxOTg3MTYzLDE1MDg5NzA5OTMsMjQ1MzYzNTc0OCwyODcwNzYzMjIxLDM2MjQzODEwODAsMzEwNTk4NDAxLDYwNzIyNTI3OCwxNDI2ODgxOTg3LDE5MjUwNzgzODgsMjE2MjA3ODIwNiwyNjE0ODg4MTAzLDMyNDgyMjI1ODAsMzgzNTM5MDQwMSw0MDIyMjI0Nzc0LDI2NDM0NzA3OCw2MDQ4MDc2MjgsNzcwMjU1OTgzLDEyNDkxNTAxMjIsMTU1NTA4MTY5MiwxOTk2MDY0OTg2LDI1NTQyMjA4ODIsMjgyMTgzNDM0OSwyOTUyOTk2ODA4LDMyMTAzMTM2NzEsMzMzNjU3MTg5MSwzNTg0NTI4NzExLDExMzkyNjk5MywzMzgyNDE4OTUsNjY2MzA3MjA1LDc3MzUyOTkxMiwxMjk0NzU3MzcyLDEzOTYxODIyOTEsMTY5NTE4MzcwMCwxOTg2NjYxMDUxLDIxNzcwMjYzNTAsMjQ1Njk1NjAzNywyNzMwNDg1OTIxLDI4MjAzMDI0MTEsMzI1OTczMDgwMCwzMzQ1NzY0NzcxLDM1MTYwNjU4MTcsMzYwMDM1MjgwNCw0MDk0NTcxOTA5LDI3NTQyMzM0NCw0MzAyMjc3MzQsNTA2OTQ4NjE2LDY1OTA2MDU1Niw4ODM5OTc4NzcsOTU4MTM5NTcxLDEzMjI4MjIyMTgsMTUzNzAwMjA2MywxNzQ3ODczNzc5LDE5NTU1NjIyMjIsMjAyNDEwNDgxNSwyMjI3NzMwNDUyLDIzNjE4NTI0MjQsMjQyODQzNjQ3NCwyNzU2NzM0MTg3LDMyMDQwMzE0NzksMzMyOTMyNTI5OCksXz1uZXcgQXJyYXkoMTc3OTAzMzcwMywzMTQ0MTM0Mjc3LDEwMTM5MDQyNDIsMjc3MzQ4MDc2MiwxMzU5ODkzMTE5LDI2MDA4MjI5MjQsNTI4NzM0NjM1LDE1NDE0NTkyMjUpLEU9bmV3IEFycmF5KDY0KTtlW3Q+PjVdfD0xMjg8PDI0LXQlMzIsZVsxNSsodCs2ND4+OTw8NCldPXQ7Zm9yKHZhciBJPTA7STxlLmxlbmd0aDtJKz0xNil7bj1fWzBdLHI9X1sxXSxvPV9bMl0saT1fWzNdLHU9X1s0XSxhPV9bNV0sZj1fWzZdLHM9X1s3XTtmb3IodmFyIEE9MDtBPDY0O0ErKylFW0FdPUE8MTY/ZVtBK0ldOkIoQihCKChtPUVbQS0yXSxMKG0sMTcpXkwobSwxOSleVShtLDEwKSksRVtBLTddKSwoYj1FW0EtMTVdLEwoYiw3KV5MKGIsMTgpXlUoYiwzKSkpLEVbQS0xNl0pLGM9QihCKEIoQihzLEwodz11LDYpXkwodywxMSleTCh3LDI1KSksKHk9dSkmYV5+eSZmKSx2W0FdKSxFW0FdKSxsPUIoTChnPW4sMileTChnLDEzKV5MKGcsMjIpLChkPW4pJihoPXIpXmQmKHA9byleaCZwKSxzPWYsZj1hLGE9dSx1PUIoaSxjKSxpPW8sbz1yLHI9bixuPUIoYyxsKTtfWzBdPUIobixfWzBdKSxfWzFdPUIocixfWzFdKSxfWzJdPUIobyxfWzJdKSxfWzNdPUIoaSxfWzNdKSxfWzRdPUIodSxfWzRdKSxfWzVdPUIoYSxfWzVdKSxfWzZdPUIoZixfWzZdKSxfWzddPUIocyxfWzddKX1yZXR1cm4gX312YXIgYz1sKFwiLi9oZWxwZXJzXCIpO2QuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gYy5oYXNoKGUscywzMiwhMCl9fSkuY2FsbCh0aGlzLGwoXCJsWXBvSTJcIiksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGY/c2VsZjpcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93P3dpbmRvdzp7fSxsKFwiYnVmZmVyXCIpLkJ1ZmZlcixhcmd1bWVudHNbM10sYXJndW1lbnRzWzRdLGFyZ3VtZW50c1s1XSxhcmd1bWVudHNbNl0sXCIvbm9kZV9tb2R1bGVzL2d1bHAtYnJvd3NlcmlmeS9ub2RlX21vZHVsZXMvY3J5cHRvLWJyb3dzZXJpZnkvc2hhMjU2LmpzXCIsXCIvbm9kZV9tb2R1bGVzL2d1bHAtYnJvd3NlcmlmeS9ub2RlX21vZHVsZXMvY3J5cHRvLWJyb3dzZXJpZnlcIil9LHtcIi4vaGVscGVyc1wiOjQsYnVmZmVyOjMsbFlwb0kyOjEwfV0sMTA6W2Z1bmN0aW9uKGUsYyx0KXsoZnVuY3Rpb24oZSx0LG4scixvLGksdSxhLGYpe2Z1bmN0aW9uIHMoKXt9KGU9Yy5leHBvcnRzPXt9KS5uZXh0VGljaz1mdW5jdGlvbigpe3ZhciBlPVwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvdy5zZXRJbW1lZGlhdGUsdD1cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3cucG9zdE1lc3NhZ2UmJndpbmRvdy5hZGRFdmVudExpc3RlbmVyO2lmKGUpcmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiB3aW5kb3cuc2V0SW1tZWRpYXRlKGUpfTtpZih0KXt2YXIgbj1bXTtyZXR1cm4gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zb3VyY2U7dCE9PXdpbmRvdyYmbnVsbCE9PXR8fFwicHJvY2Vzcy10aWNrXCIhPT1lLmRhdGF8fChlLnN0b3BQcm9wYWdhdGlvbigpLDA8bi5sZW5ndGgmJm4uc2hpZnQoKSgpKX0sITApLGZ1bmN0aW9uKGUpe24ucHVzaChlKSx3aW5kb3cucG9zdE1lc3NhZ2UoXCJwcm9jZXNzLXRpY2tcIixcIipcIil9fXJldHVybiBmdW5jdGlvbihlKXtzZXRUaW1lb3V0KGUsMCl9fSgpLGUudGl0bGU9XCJicm93c2VyXCIsZS5icm93c2VyPSEwLGUuZW52PXt9LGUuYXJndj1bXSxlLm9uPXMsZS5hZGRMaXN0ZW5lcj1zLGUub25jZT1zLGUub2ZmPXMsZS5yZW1vdmVMaXN0ZW5lcj1zLGUucmVtb3ZlQWxsTGlzdGVuZXJzPXMsZS5lbWl0PXMsZS5iaW5kaW5nPWZ1bmN0aW9uKGUpe3Rocm93IG5ldyBFcnJvcihcInByb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkXCIpfSxlLmN3ZD1mdW5jdGlvbigpe3JldHVyblwiL1wifSxlLmNoZGlyPWZ1bmN0aW9uKGUpe3Rocm93IG5ldyBFcnJvcihcInByb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZFwiKX19KS5jYWxsKHRoaXMsZShcImxZcG9JMlwiKSxcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZj9zZWxmOlwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3c/d2luZG93Ont9LGUoXCJidWZmZXJcIikuQnVmZmVyLGFyZ3VtZW50c1szXSxhcmd1bWVudHNbNF0sYXJndW1lbnRzWzVdLGFyZ3VtZW50c1s2XSxcIi9ub2RlX21vZHVsZXMvZ3VscC1icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9wcm9jZXNzL2Jyb3dzZXIuanNcIixcIi9ub2RlX21vZHVsZXMvZ3VscC1icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9wcm9jZXNzXCIpfSx7YnVmZmVyOjMsbFlwb0kyOjEwfV0sMTE6W2Z1bmN0aW9uKGUsdCxzKXsoZnVuY3Rpb24oZSx0LG4scixvLGksdSxhLGYpe3MucmVhZD1mdW5jdGlvbihlLHQsbixyLG8pe3ZhciBpLHUsYT04Km8tci0xLGY9KDE8PGEpLTEscz1mPj4xLGM9LTcsbD1uP28tMTowLGQ9bj8tMToxLGg9ZVt0K2xdO2ZvcihsKz1kLGk9aCYoMTw8LWMpLTEsaD4+PS1jLGMrPWE7MDxjO2k9MjU2KmkrZVt0K2xdLGwrPWQsYy09OCk7Zm9yKHU9aSYoMTw8LWMpLTEsaT4+PS1jLGMrPXI7MDxjO3U9MjU2KnUrZVt0K2xdLGwrPWQsYy09OCk7aWYoMD09PWkpaT0xLXM7ZWxzZXtpZihpPT09ZilyZXR1cm4gdT9OYU46MS8wKihoPy0xOjEpO3UrPU1hdGgucG93KDIsciksaS09c31yZXR1cm4oaD8tMToxKSp1Kk1hdGgucG93KDIsaS1yKX0scy53cml0ZT1mdW5jdGlvbihlLHQsbixyLG8saSl7dmFyIHUsYSxmLHM9OCppLW8tMSxjPSgxPDxzKS0xLGw9Yz4+MSxkPTIzPT09bz9NYXRoLnBvdygyLC0yNCktTWF0aC5wb3coMiwtNzcpOjAsaD1yPzA6aS0xLHA9cj8xOi0xLGc9dDwwfHwwPT09dCYmMS90PDA/MTowO2Zvcih0PU1hdGguYWJzKHQpLGlzTmFOKHQpfHx0PT09MS8wPyhhPWlzTmFOKHQpPzE6MCx1PWMpOih1PU1hdGguZmxvb3IoTWF0aC5sb2codCkvTWF0aC5MTjIpLHQqKGY9TWF0aC5wb3coMiwtdSkpPDEmJih1LS0sZio9MiksMjw9KHQrPTE8PXUrbD9kL2Y6ZCpNYXRoLnBvdygyLDEtbCkpKmYmJih1KyssZi89MiksYzw9dStsPyhhPTAsdT1jKToxPD11K2w/KGE9KHQqZi0xKSpNYXRoLnBvdygyLG8pLHUrPWwpOihhPXQqTWF0aC5wb3coMixsLTEpKk1hdGgucG93KDIsbyksdT0wKSk7ODw9bztlW24raF09MjU1JmEsaCs9cCxhLz0yNTYsby09OCk7Zm9yKHU9dTw8b3xhLHMrPW87MDxzO2VbbitoXT0yNTUmdSxoKz1wLHUvPTI1NixzLT04KTtlW24raC1wXXw9MTI4Kmd9fSkuY2FsbCh0aGlzLGUoXCJsWXBvSTJcIiksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGY/c2VsZjpcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93P3dpbmRvdzp7fSxlKFwiYnVmZmVyXCIpLkJ1ZmZlcixhcmd1bWVudHNbM10sYXJndW1lbnRzWzRdLGFyZ3VtZW50c1s1XSxhcmd1bWVudHNbNl0sXCIvbm9kZV9tb2R1bGVzL2llZWU3NTQvaW5kZXguanNcIixcIi9ub2RlX21vZHVsZXMvaWVlZTc1NFwiKX0se2J1ZmZlcjozLGxZcG9JMjoxMH1dfSx7fSxbMV0pKDEpfSk7IiwiLy8gR2xvYmFscyB0byBkZWZpbmUgc3ByZWFkc2hlZXQgY29sdW1uIG5hbWVzLFxuLy8gICAgIGluIGNhc2Ugc29tZXRoaW5nIGlzIGNoYW5nZWQgbGF0ZXIuXG5cbmNvbnN0IGYgPSB7XG4gIHR5cGU6ICdUeXBlJyxcbiAgbmFtZTogJ05hbWUnLFxuICBza3U6ICdTS1UnLFxuICBwaWM6ICdQSUMnLFxuICBjYXQ6ICd0YXg6cHJvZHVjdF9jYXQnLFxuICB0YWc6ICd0YXg6cHJvZHVjdF90YWcnLFxuICBkZXNjOiAnRGVzY3JpcHRpb24nLFxuICBzaG9ydF9kZXNjOiAnU2hvcnQgRGVzY3JpcHRpb24nLFxuICB2aXNpYmlsaXR5OiAnVmlzaWJpbGl0eSBpbiBjYXRhbG9nJyxcbiAgcGFja2FnZTogJ1BhY2thZ2UnLFxuICB0aXRsZTogJ1RpdGxlJywgLy8gVXNlZCBpbiBwYWNrYWdlc1xuICBhdHRyOiAnQXR0cmlidXRlcycsIC8vIFVzZWQgaW4gcGFja2FnZXNcbiAgbW9kZWw6ICdNb2RlbCcsIC8vIFVzZWQgaW4gcGFja2FnZXNcbiAgc2t1czogJ1NLVXMnLCAvLyBVc2VkIGluIHBhY2thZ2VzXG4gIHByb2RfaW5mbzogJ1Byb2R1Y3QgSW5mbycsIC8vIFVzZWQgaW4gcGFja2FnZXNcbiAgaW1hZ2U6ICdJbWFnZScsXG4gIGluZGVudDogJ0luZGVudGlvbicsXG4gIHdhcnJhbnR5TGlzdDogJ1dhcnJhbnR5IExpc3QnLFxuICB3YXJyYW50eUJvZHk6ICdXYXJyYW50eSBCb2R5JyxcbiAgb3JkZXJJbmZvOiAnT3JkZXJpbmcgSW5mb3JtYXRpb24nLFxuICBmZWF0czogJ1Byb2R1Y3QgRmVhdHVyZXMnLFxuICByZWxhdGVkOiAnUmVsYXRlZCBQcm9kdWN0cycsXG4gIGluZGljdDogJ0luZGljYXRpb25zJyxcbiAgZG93bnM6ICdEb3dubG9hZHMnLFxuICBtYWluX21vZGVsOiAnTWFpbiBNb2RlbCcsXG4gIHBuZjogJ0luIFBhcnQgTnVtYmVyIEZpbmRlcicsXG59O1xuXG5leHBvcnQgeyBmIH07XG4iLCJpbXBvcnQgeyBmIH0gZnJvbSAnLi9maWVsZHMuanMnO1xuaW1wb3J0IGhhc2ggZnJvbSAnb2JqZWN0LWhhc2gnO1xuXG4vLyAgIFRoZSBhdHRyaWJ1dGUgY29sdW1uIHJpZ2h0IGJlZm9yZSBzcGVjaWZpY2F0aW9ucyBzdGFydFxuY29uc3QgYl9TcGVjc1N0YXJ0ID0gJ1NwZWNpZmljYXRpb24gU3RhcnQnO1xuY29uc3QgYl9TcGVjc0VuZCA9ICdTcGVjaWZpY2F0aW9uIEVuZCc7XG5cbmZ1bmN0aW9uIGZpbmRTcGVjQm91bmRzKGF0dHJSb3cpIHtcbiAgbGV0IHN0YXJ0ZWQgPSBmYWxzZTtcblxuICByZXR1cm4gYXR0clJvd1xuICAgIC5tYXAoKHZhbCwgaW5kKSA9PiB7XG4gICAgICBpZiAodmFsID09PSBiX1NwZWNzU3RhcnQpIHtcbiAgICAgICAgc3RhcnRlZCA9IHRydWU7XG4gICAgICAgIHJldHVybiBpbmQ7XG4gICAgICB9XG5cbiAgICAgIGlmICh2YWwgPT09IGJfU3BlY3NFbmQgJiYgc3RhcnRlZCkge1xuICAgICAgICByZXR1cm4gaW5kO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0pXG4gICAgLmZpbHRlcih2YWwgPT4ge1xuICAgICAgaWYgKGZhbHNlICE9PSB2YWwpIHJldHVybiB0cnVlOyAvLyBJIGtub3cgdGhpcyBsb29rcyBzaWxseSwgYnV0IHdoYXQgaWYgdmFsID09IDA/XG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIGZpbmRTcGVjSWNvbnMoYXR0clJvdywgcm93KSB7XG4gIGNvbnN0IGljb25zID0ge307XG4gIGlmICghcm93LmluY2x1ZGVzKCdJQ09OJykpIHtcbiAgICB3aW5kb3cuYWxlcnQoJ0FyZSB5b3Ugc3VyZSB5b3VyIGRlZmluaW5nIHNwZWNpZmljYXRpb24gaWNvbnM/Jyk7XG4gIH1cbiAgcm93Lm1hcCgodmFsLCBpbmQpID0+IHtcbiAgICBpZiAoJycgIT09IHZhbCAmJiAnSUNPTicgIT09IHZhbCkge1xuICAgICAgaWNvbnNbYXR0clJvd1tpbmRdXSA9IHZhbDtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gaWNvbnM7XG59XG5cbmZ1bmN0aW9uIGNvbXB1dGVDaGVja3N1bShwcm9kcykge1xuICBPYmplY3QudmFsdWVzKHByb2RzKS5tYXAoKHByb2QpID0+IHtcbiAgICBwcm9kc1twcm9kW2YucGljXV0uY2hlY2tzdW0gPSBoYXNoKHByb2QpO1xuICB9KTtcbiAgY29uc29sZS5sb2coJ0hBU0hlZCcsIHByb2RzKTtcbiAgcmV0dXJuIHByb2RzO1xufVxuXG5mdW5jdGlvbiBmaWx0ZXJFeGlzdGluZyhkYXRhKSB7XG4gIGNvbnN0IGV4aXN0aW5nSGFzaGVzID0ge307XG4gIGRhdGEuZm9yRWFjaChXUHByb2QgPT4ge1xuICAgIHRyeSB7XG4gICAgICBleGlzdGluZ0hhc2hlc1tXUHByb2QubWV0YS5QSUNbMF1dID0ge1xuICAgICAgICBpZDogV1Bwcm9kLmlkLFxuICAgICAgICBjaGVja3N1bTogU3RyaW5nKFdQcHJvZC5tZXRhLnByb2R1Y3RfaGFzaFswXSksXG4gICAgICB9O1xuICAgIH0gY2F0Y2ggeyBjb25zb2xlLmxvZyhgSUQ6JHtXUHByb2QuaWR9IGlzIG5vdCBhIGxlZ2l0aW1hdGUgcHJvZHVjdCA6KGApOyB9XG4gIH0pO1xuICByZXR1cm4gZXhpc3RpbmdIYXNoZXM7XG59XG5cbmZ1bmN0aW9uIGNvbXBhcmVIYXNoZXNGb3JQYXlsb2FkKG5ld1Byb2RzLCBleGlzdGluZywgdXBkYXRpbmcgPSB0cnVlLCBQSUNzVG9VcGRhdGUgPSAnJykge1xuICBpZiAoIWV4aXN0aW5nKSByZXR1cm4gW1tdLCBPYmplY3Qua2V5cyhuZXdQcm9kcyldO1xuICBjb25zdCB0b1Bvc3QgPSBbXTtcblxuICBpZiAoUElDc1RvVXBkYXRlKSB7XG4gICAgY29uc29sZS5sb2coJ1BJQyBzcGVjaWZpZXIgZm91bmQnLCBQSUNzVG9VcGRhdGUpO1xuICAgIHRvUG9zdC5wdXNoKC4uLlBJQ3NUb1VwZGF0ZS5zcGxpdCgnLCcpXG4gICAgICAubWFwKHBpYyA9PiB7XG4gICAgICAgIHBpYyA9IHBpYy50cmltKCk7XG4gICAgICAgIGlmIChuZXdQcm9kc1twaWNdKSByZXR1cm4gcGljO1xuICAgICAgfSlcbiAgICAgIC5maWx0ZXIodmFsID0+IHZhbCkpO1xuICB9IGVsc2UgaWYgKHVwZGF0aW5nKSB7XG4gIC8vIElmIHRoaXMgaXMgYW4gdXBkYXRlLCBjb25zaWRlciBjaGVja3N1bXMgZm9yIHVuY2hhbmdlZCBwcm9kdWN0c1xuICAgIHRvUG9zdC5wdXNoKC4uLk9iamVjdC5rZXlzKG5ld1Byb2RzKS5tYXAocGljID0+IHtcbiAgICAgIGlmIChleGlzdGluZ1twaWNdICYmIGV4aXN0aW5nW3BpY10uY2hlY2tzdW0gPT09IG5ld1Byb2RzW3BpY10uY2hlY2tzdW0pIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHBpYztcbiAgICB9KS5maWx0ZXIodmFsID0+IGZhbHNlICE9PSB2YWwpKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBPdGhlcndpc2UsIHBvc3QgZXZlcnl0aGluZyBmb3VuZFxuICAgIHRvUG9zdC5wdXNoKC4uLk9iamVjdC5rZXlzKG5ld1Byb2RzKSk7XG4gIH1cbiAgLy8gRm9yIGV2ZXJ5IHByb2R1Y3QgdGhhdCdsbCBiZSBwb3N0ZWQsIGZpbmQgaXRzIHBvc3NpYmxlIGNvcnJlc3BvbmRpbmcgcG9zdCBpbiBXUCB0byBkZWxldGVcbiAgY29uc3QgdG9EZWxldGUgPSB0b1Bvc3QuZmlsdGVyKHBpYyA9PiB1bmRlZmluZWQgIT09IGV4aXN0aW5nW3BpY10pLm1hcChwaWMgPT4gZXhpc3RpbmdbcGljXS5pZCk7XG4gIHJldHVybiBbdG9EZWxldGUsIHRvUG9zdF07XG59XG5cbmZ1bmN0aW9uIGtleUJ5UElDKHByb2RzKSB7XG4gIGNvbnN0IFByb2RCeVBJQyA9IHt9O1xuICBwcm9kcy5tYXAodmFsID0+IHtcbiAgICBpZiAoIXZhbCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmICghUHJvZEJ5UElDW3ZhbFtmLnBpY11dKSB7XG4gICAgICBQcm9kQnlQSUNbdmFsW2YucGljXV0gPSBbXTtcbiAgICB9XG5cbiAgICBQcm9kQnlQSUNbdmFsW2YucGljXV0gPSB2YWw7XG5cbiAgICByZXR1cm4gdmFsO1xuICB9KTtcblxuICByZXR1cm4gUHJvZEJ5UElDO1xufVxuXG5mdW5jdGlvbiBzcGxpdEFuZFZlcmlmeShjb21tYVNlcGFyYXRlZCkge1xuICBpZiAoIWNvbW1hU2VwYXJhdGVkKSByZXR1cm4gW107XG4gIGNvbnN0IHJ2ID0gY29tbWFTZXBhcmF0ZWQuc3BsaXQoJywnKS5tYXAodmFsID0+IHtcbiAgICByZXR1cm4gdmFsLnRyaW0oKTtcbiAgfSk7XG4gIGlmICgnJyA9PT0gcnZbMF0pIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHJ2O1xufVxuXG5mdW5jdGlvbiBidWlsZFBhY2thZ2VPYmoocGFja2FnZXMpIHtcbiAgY29uc3QgcnYgPSB7fTtcbiAgY29uc3QgYXR0ciA9IHBhY2thZ2VzWzBdLnNwbGljZSgxKTtcbiAgLy8gSWdub3JlIElEIGZpZWxkIHNpbmNlIHRoZSByb3dzIGFyZSBzcGxpY2VkIHRvb1xuXG4gIHBhY2thZ2VzLnNwbGljZSgxKS5tYXAocm93ID0+IHtcbiAgICBjb25zdCBpZCA9IHJvd1swXTtcbiAgICBpZiAodW5kZWZpbmVkICE9PSBydltpZF0pIHtcbiAgICAgIHdpbmRvdy5hbGVydChgQ29uZmxpY3RpbmcgcGFja2FnZSBJRCdzIGZvdW5kOiAke2lkfWApO1xuICAgIH1cbiAgICBydltpZF0gPSB7fTtcbiAgICByb3cuc3BsaWNlKDEpLm1hcCgodmFsLCBpbmQpID0+IHtcbiAgICAgIHJ2W2lkXVthdHRyW2luZF1dID0gdmFsO1xuICAgIH0pO1xuICAgIHJ2W2lkXVtmLmF0dHJdID0gc3BsaXRBbmRWZXJpZnkocnZbaWRdW2YuYXR0cl0pO1xuICAgIHJ2W2lkXVtmLnNrdXNdID0gc3BsaXRBbmRWZXJpZnkocnZbaWRdW2Yuc2t1c10pO1xuICB9KTtcbiAgcmV0dXJuIHJ2O1xufVxuXG5mdW5jdGlvbiBsaW5rVmFyaWF0aW9ucyhwYXJlbnRzLCB2YXJpZXMpIHtcbiAgLy8gR2l2ZSBhbGwgcGFyZW50cyBhbiBhcnJheSBmaXJzdCwgYW5kIGlmIHByb2QudHlwZSBpcyBzaW1wbGUsXG4gIC8vICAgICAgICBjb3B5IHRoZSBza3UgYW5kIG5hbWUgdG8gbWFrZSBhIGJhc2ljIHZhcmlhdGlvblxuICBPYmplY3QudmFsdWVzKHBhcmVudHMpLm1hcChwcm9kID0+IHtcbiAgICBwYXJlbnRzW3Byb2RbZi5waWNdXS52YXJpYXRpb25zID0gW107XG4gICAgaWYgKCdzaW1wbGUnID09PSBwcm9kW2YudHlwZV0pIHtcbiAgICAgIHBhcmVudHNbcHJvZFtmLnBpY11dLnZhcmlhdGlvbnMucHVzaCh7XG4gICAgICAgIG5hbWU6IHByb2RbZi5uYW1lXSxcbiAgICAgICAgc2t1OiBwcm9kW2Yuc2t1XSxcbiAgICAgICAgc3BlY3M6IFtdLFxuICAgICAgfSk7XG4gICAgfVxuICB9KTtcblxuICB2YXJpZXMubWFwKHZhbCA9PiB7XG4gICAgaWYgKHVuZGVmaW5lZCA9PT0gcGFyZW50c1t2YWxbZi5waWNdXSkgcmV0dXJuIGZhbHNlO1xuXG4gICAgY29uc3QgdmFyTiA9IHBhcmVudHNbdmFsW2YucGljXV0udmFyaWF0aW9ucy5wdXNoKHtcbiAgICAgIG5hbWU6IHZhbFtmLm5hbWVdLFxuICAgICAgc2t1OiB2YWxbZi5za3VdLFxuICAgICAgc3BlY3M6IHZhbC5zcGVjcywgLy8gVGhpcyBpcyB0b28gaGVhdnkgb3B0aW1pemVWYXJpYXRpb25zIHRyYW5zZm9ybXMgbGF0ZXJcbiAgICB9KTtcbiAgICAvLyBVbmRlZmluZWQgaXMgYmV0dGVyIGZvciBwYXlsb2FkIHNpemVcbiAgICBpZiAodmFsW2YuaW1hZ2VdKSB7IHBhcmVudHNbdmFsW2YucGljXV0udmFyaWF0aW9uc1t2YXJOIC0gMV0uaW1hZ2UgPSB2YWxbZi5pbWFnZV07IGNvbnNvbGUubG9nKCdoYXMgaW1hZ2UnKTsgfTtcbiAgICBpZiAodmFsW2YuaW5kZW50XSkgeyBwYXJlbnRzW3ZhbFtmLnBpY11dLnZhcmlhdGlvbnNbdmFyTiAtIDFdLmluZGVudCA9IHZhbFtmLmluZGVudF07IH07XG4gICAgaWYgKHZhbFtmLnBhY2thZ2VdKSB7IHBhcmVudHNbdmFsW2YucGljXV0udmFyaWF0aW9uc1t2YXJOIC0gMV0ucGFja2FnZSA9IHZhbFtmLnBhY2thZ2VdOyB9O1xuICB9KTtcblxuICByZXR1cm4gcGFyZW50cztcbn1cblxuZnVuY3Rpb24gbGlua1BhY2thZ2VzKHBhcmVudHMsIHBhY2tzKSB7XG4gIHBhY2tzID0gYnVpbGRQYWNrYWdlT2JqKHBhY2tzKTtcblxuICAvLyBMZWFybiB3aGF0IHlvdSBjYW4gZnJvbSBqdXN0IHZhcmlhdGlvbnNcbiAgT2JqZWN0LnZhbHVlcyhwYXJlbnRzKS5tYXAocHJvZCA9PiB7XG4gICAgY29uc3QgcGFja2FnZXMgPSB7fTtcblxuICAgIC8vIERlZmF1bHQgcGFja2FnZVxuICAgIHBhY2thZ2VzLmRyb3AgPSB7XG4gICAgICBsYWJlbDogJycsIC8vISBUaGlzIHNob3VsZCBwdWxsIGZyb20gUElDIGJ5IGNvbnRyb2xsZXJcbiAgICAgIHBpYzogcHJvZFtmLnBpY10sXG4gICAgICBtb2RlbDogJ0InLFxuICAgICAgc2t1czogW10sXG4gICAgICBzcGVjczogW10sIC8vIFRoaXMgbmVlZHMgdG8gYmUgcHVsbGVkIGZyb20gdmFyeWluZyBhdHRyaWJ1dGVzXG4gICAgICBwcm9kdWN0X2luZm86IFsnbmFtZScsICdkZXNjcmlwdGlvbicsICdpbWFnZSddLFxuICAgIH07XG5cbiAgICBpZiAocHJvZC52YXJpYXRpb25zKSB7XG4gICAgICBwcm9kLnZhcmlhdGlvbnMubWFwKHZhcnkgPT4ge1xuICAgICAgICBpZiAodW5kZWZpbmVkICE9PSB2YXJ5LnBhY2thZ2UpIHtcbiAgICAgICAgICAvLyBWYXJpYXRpb24gc3BlY2lmaWVzIGEgcGFja2FnZSB0byBiZSBpblxuICAgICAgICAgIC8vICAgc2VlIGlmIHRoYXQgcGFja2FnZSBleGlzdHMgZmlyc3RcbiAgICAgICAgICBpZiAoIXBhY2thZ2VzW3ZhcnkucGFja2FnZV0pIHtcbiAgICAgICAgICAgIHBhY2thZ2VzW3ZhcnkucGFja2FnZV0gPSB7IC8vIEJhc2UgcGFja2FnZSB0ZW1wbGF0ZVxuICAgICAgICAgICAgICBsYWJlbDogdmFyeS5wYWNrYWdlLFxuICAgICAgICAgICAgICBwaWM6IHByb2RbZi5waWNdLFxuICAgICAgICAgICAgICBtb2RlbDogJ0InLFxuICAgICAgICAgICAgICBza3VzOiBbXSxcbiAgICAgICAgICAgICAgc3BlY3M6IFtdLCAvLyBEZWZpbmVkIGJ5IHBhY2sgc2hlZXQgYmVsb3dcbiAgICAgICAgICAgICAgcHJvZHVjdF9pbmZvOiBbXSwgLy8gRGVmaW5lZCBieSBwYWNrIHNoZWV0IGJlbG93XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgLy8gaWYgdGhpcyBpcyBhICdsaXN0JyBwYWNrYWdlLCBlbnN1cmUgbW9kZWwgQVxuICAgICAgICAgICAgaWYgKCdsaXN0JyA9PT0gdmFyeS5wYWNrYWdlKSB7XG4gICAgICAgICAgICAgIHBhY2thZ2VzW3ZhcnkucGFja2FnZV0ubW9kZWwgPSAnQSc7XG4gICAgICAgICAgICAgIHBhY2thZ2VzW3ZhcnkucGFja2FnZV0ubGFiZWwgPSAnJzsgLy8hIFBJQydzIG5hbWUgaWYgb24gYW5vdGhlciBwcm9kdWN0XG4gICAgICAgICAgICAgIHBhY2thZ2VzW3ZhcnkucGFja2FnZV0ucHJvZHVjdF9pbmZvID0gWyduYW1lJywgJ2Rlc2NyaXB0aW9uJywgJ2ltYWdlJ107XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIElmIGFueSBvZiB0aGUgdmFyaWF0aW9ucyBoYXZlIGltYWdlcywgdXBncmFkZSB0aGF0IHBhY2thZ2UgbW9kZWwuXG4gICAgICAgICAgaWYgKHZhcnkuaW1hZ2UpIHtcbiAgICAgICAgICAgIHBhY2thZ2VzW3ZhcnkucGFja2FnZV0ubW9kZWwgPSAnQyc7XG4gICAgICAgICAgICAvLyAgIE1ha2Ugc3VyZSB0aGV5J3JlIHNlcGFyYXRlIGZyb20gdGhlICdkcm9wJyBmaXJzdFxuICAgICAgICAgICAgLy8gQW55IG90aGVyIGRldGFpbHMgc2hvdWxkIGJlIGRlZmluZWQgYnkgcGFjayBzaGVldFxuICAgICAgICAgIH1cbiAgICAgICAgICAvLyBBZGQgdmFyaWF0aW9uIHRvIHRoZSBwYWNrYWdlIG9mIGl0cyBjaG9pY2VcbiAgICAgICAgICBjb25zb2xlLmxvZyhwcm9kW2YubmFtZV0sIHZhcnkucGFja2FnZSk7XG4gICAgICAgICAgcGFja2FnZXNbdmFyeS5wYWNrYWdlXS5za3VzLnB1c2godmFyeS5za3UpO1xuXG4gICAgICAgIC8vIElmIGEgcGFja2FnZSBuYW1lIGlzbid0IHNwZWNpZmllZCBidXQgdGhlIHZhcmlhdGlvbiBzdGlsbCB1c2VzIGFuIGltYWdlLCB1c2UgYSBibGFuayBwYWNrYWdlIG5hbWUsIHNpbWlsYXIgdG8gJ2Ryb3AnXG4gICAgICAgIH0gZWxzZSBpZiAodmFyeS5pbWFnZSkge1xuICAgICAgICAgIC8vIENoZWNrIGlmIHRoZXJlIGFscmVhZHkgaXNuJ3QgYSBwYWNrYWdlIGZvciB1bmxhYmVsZWQgcGFja2FnZXMgb2YgdmFyaWF0aW9uIGltYWdlcy5cbiAgICAgICAgICBpZiAoIXBhY2thZ2VzLnZhcnlJbWFnZSkge1xuICAgICAgICAgICAgcGFja2FnZXMudmFyeUltYWdlID0ge1xuICAgICAgICAgICAgICBsYWJlbDogJycsXG4gICAgICAgICAgICAgIHBpYzogcHJvZFtmLnBpY10sXG4gICAgICAgICAgICAgIHNrdXM6IFtdLFxuICAgICAgICAgICAgICBzcGVjczogW10sXG4gICAgICAgICAgICAgIG1vZGVsOiAnQycsXG4gICAgICAgICAgICAgIHByb2R1Y3RfaW5mbzogWyduYW1lJywgJ2Rlc2NyaXB0aW9uJywgJ2ltYWdlJ10sXG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH1cbiAgICAgICAgICBwYWNrYWdlcy52YXJ5SW1hZ2Uuc2t1cy5wdXNoKHZhcnkuc2t1KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwYWNrYWdlcy5kcm9wLnNrdXMucHVzaCh2YXJ5LnNrdSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vICAgUmVtb3ZlIGRlZmF1bHQgaWYgZXZlcnkgdmFyaWF0aW9uIGZvdW5kIGEgcGFja2FnZVxuICAgIGlmICgwID09PSBwYWNrYWdlcy5kcm9wLnNrdXMubGVuZ3RoKSB7XG4gICAgICBkZWxldGUgcGFja2FnZXMuZHJvcDtcbiAgICB9XG5cbiAgICAvLyBOb3cgYXBwbHkgdGhlIHBhY2thZ2UgZmlsZSBmb3IgbW9yZSBwYWNrYWdlcyBhbmQgc3BlY3NcbiAgICAvLyBBbGwgcGFja2FnZXMgbXVzdCBoYXZlIG5hbWVzIGJ5IG5vdywgb3RoZXJ3aXNlIHRoZSB2YXJpYXRpb25zIHdvdWxkbid0IGJlIGFibGUgdG8gc2F2ZSBvciB0aGV5IHdvdWxkIGJlIHB1dCBpbiAnZHJvcCdcbiAgICBpZiAocHJvZFtmLnBhY2thZ2VdKSB7XG4gICAgICBwcm9kW2YucGFja2FnZV0uc3BsaXQoJywnKS5tYXAoaWQgPT4ge1xuICAgICAgICAvLyBUaGlzIGlzIGEgcGFja2FnZSB3aG8ncyBuYW1lIGRlcml2ZXMgZnJvbSBQSUNcbiAgICAgICAgaWQgPSBpZC50cmltKCk7XG4gICAgICAgIC8vIEJlZm9yZSBtYWtpbmcgY3VzdG9tIHBhY2thZ2UsIG1ha2Ugc3VyZSB0aGUgdmFyaWF0aW9ucyBkaWRuJ3QgYWxyZWFkeSBkZWZpbmUgaXQuXG4gICAgICAgIGlmIChwYWNrc1tpZF1bZi50aXRsZV0gJiBwYWNrYWdlc1twYWNrc1tpZF1bZi50aXRsZV1dKSB7XG4gICAgICAgICAgcGFja2FnZXNbJ2N1c3RvbScgKyBpZF0gPSBwYWNrYWdlc1twYWNrc1tpZF1bZi50aXRsZV1dO1xuICAgICAgICAgIGRlbGV0ZSBwYWNrYWdlc1twYWNrc1tpZF1bZi50aXRsZV1dO1xuICAgICAgICB9IGVsc2UgLyogT3RoZXJ3aXNlLCBidWlsZCB0aGUgbmV3IHBhY2thZ2UgKi8ge1xuICAgICAgICAgIHBhY2thZ2VzWydjdXN0b20nICsgaWRdID0ge1xuICAgICAgICAgICAgbGFiZWw6ICcnLFxuICAgICAgICAgICAgcGljOiAnJyxcbiAgICAgICAgICAgIHNrdXM6IFtdLFxuICAgICAgICAgICAgbW9kZWw6ICdCJyxcbiAgICAgICAgICAgIHNwZWNzOiBbXSwgLy8gVGhpcyBuZWVkcyB0byBiZSBwdWxsZWQgZnJvbSB2YXJ5aW5nIGF0dHJpYnV0ZXNcbiAgICAgICAgICAgIHByb2R1Y3RfaW5mbzogW10sXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEZvciBldmVyeSBmaWVsZCB0aGF0IGlzIGRlZmluZWQgYnkgdGhlIHBhY2thZ2Ugc2hlZXQsIGNvbmZpcm0gYW5kIHJlLXNwZWNpZnkuXG4gICAgICAgIGlmIChwYWNrc1tpZF1bZi5pbWFnZV0pIHtcbiAgICAgICAgICBwYWNrYWdlc1snY3VzdG9tJyArIGlkXS5tb2RlbCA9ICdEJztcbiAgICAgICAgICBwYWNrYWdlc1snY3VzdG9tJyArIGlkXS5pbWFnZSA9IHBhY2tzW2lkXVtmLmltYWdlXTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocGFja3NbaWRdW2YucGljXSkge1xuICAgICAgICAgIHBhY2thZ2VzWydjdXN0b20nICsgaWRdLnBpYyA9IHBhY2tzW2lkXVtmLnBpY107XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHBhY2tzW2lkXVtmLnNrdXNdKSB7XG4gICAgICAgICAgcGFja2FnZXNbJ2N1c3RvbScgKyBpZF0uc2t1cy5wdXNoKC4uLnBhY2tzW2lkXVtmLnNrdXNdKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocGFja3NbaWRdW2YuYXR0cl0pIHtcbiAgICAgICAgICBwYWNrYWdlc1snY3VzdG9tJyArIGlkXS5zcGVjcyA9IHBhY2tzW2lkXVtmLmF0dHJdO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwYWNrc1tpZF1bZi50aXRsZV0pIHtcbiAgICAgICAgICBwYWNrYWdlc1snY3VzdG9tJyArIGlkXS5sYWJlbCA9IHBhY2tzW2lkXVtmLnRpdGxlXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBJZiB0aGUgdGl0bGUgaXMgbm90IHNwZWNpZmllZCwgdGhpcyBpcyBhIHByb2R1Y3QgYmx1cmIgYW5kIHRoZSB0aXRsZSBhbmQgcHJvZHVjdF9pbmZvIHNob3VsZCBiZSBwdWxsZWQgZnJvbSB0aGUgUElDLlxuICAgICAgICAgIHBhY2thZ2VzWydjdXN0b20nICsgaWRdLnByb2R1Y3RfaW5mbyA9IFsnbmFtZScsICdkZXNjcmlwdGlvbicsICdpbWFnZSddO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwYWNrc1tpZF1bZi5tb2RlbF0pIHtcbiAgICAgICAgICBwYWNrYWdlc1snY3VzdG9tJyArIGlkXS5tb2RlbCA9IHBhY2tzW2lkXVtmLm1vZGVsXTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICAgIC8vIFRPRE86IFRlc3Qgd2l0aCBQb3N0ZXJpb3IgTW91bnRpbmcgQnJhY2tldHMgd2l0aCB0aGUgYXJ0IG9mIGxpbmtpbmcgdmlhIGxhYmVsIGFuZCBzcGVjaWZ5IHNwZWNzIGluIHNoZWV0XG4gICAgLy8gVE9ETzogIG5ldmVybWluZCwgYnV0IHRlc3QgYW55d2F5c1xuXG4gICAgLy8vIC8gOiBDb25maXJtIHRoYXQgdGhlIGZpcnN0IHBhY2thZ2UgaXMgdGhlICdkcm9wJyBwYWNrYWdlXG4gICAgLy8gVE9ETzogU3RvcCB1c2luZyB0aGUgZHJvcCBwYWNrYWdlLi4uXG4gICAgLy8gaWYgKE9iamVjdC52YWx1ZXMocGFja2FnZXMpWzBdICYmICcnICE9PSBPYmplY3QudmFsdWVzKHBhY2thZ2VzKVswXS5sYWJlbCkge1xuICAgIC8vICAgd2luZG93LmFsZXJ0KGAke3Byb2RbZi5uYW1lXX0gc2hvdWxkIGJlIHNwZWNpZnlpbmcgbWFpbiBwcm9kdWN0IHZhcmlhdGlvbnMgZmlyc3QhYCk7XG4gICAgLy8gfVxuXG4gICAgLy8gUGFja2FnZXMgbWFrZXMgdXAgYm90aCBwYWNrYWdlcyBpbXBsaWNpdGx5IGRlZmluZWQgaW4gdmFyaWF0aW9ucyBhbmQgZXhwbGljaXRseSBmcm9tIHRoZSBzaGVldFxuICAgIHBhcmVudHNbcHJvZFtmLnBpY11dLnBhY2thZ2VzID0gcGFja2FnZXM7XG4gIH0pO1xuXG4gIHJldHVybiBwYXJlbnRzO1xufVxuXG4vLyBjb25maXJtIGRlZmluaXRpb24gb2YgcHJvcGVydGllcyB0aGF0IHdpbGwgYmUgdXNlZCBpbiBQT1NUXG4vLyAgICB1c2VkIGZvciBjbGVhbmluZyB0YXhvbm9taWVzIGZvciBub3dcbmZ1bmN0aW9uIHZlcmlmeUZpZWxkcyhwcm9kKSB7XG4gIHJldHVybiBwcm9kO1xufVxuXG5mdW5jdGlvbiB2ZXJpZnlGaWxlcyhwYXJlbnRGaWxlSGFuZGxlciwgdmFyaWF0aW9uRmlsZUhhbmRsZXIsIHBhY2thZ2VGaWxlSGFuZGxlcikge1xuICBpZiAocGFyZW50RmlsZUhhbmRsZXIgPT09IHVuZGVmaW5lZCkge1xuICAgIHdpbmRvdy5hbGVydCgnU3BlY2lmeSBhIHBhcmVudCBwcm9kdWN0IGZpbGUgZmlyc3QnKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgaWYgKHZhcmlhdGlvbkZpbGVIYW5kbGVyID09PSB1bmRlZmluZWQpIHtcbiAgICB3aW5kb3cuYWxlcnQoJ1NwZWNpZnkgYSB2YXJpYXRpb25zIGZpbGUgZmlyc3QnKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgaWYgKHBhY2thZ2VGaWxlSGFuZGxlciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgd2luZG93LmFsZXJ0KCdTcGVjaWZ5IGEgcGFja2FnZSBmaWxlIGZpcnN0Jyk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBidWlsZFNwZWMoc3RhcnQsIGVuZCwgaW5kLCB2YWwsIGljb24pIHtcbiAgaWYgKHN0YXJ0IDwgaW5kICYmIGluZCA8IGVuZCkge1xuICAgIGNvbnN0IHNwZWMgPSB7fTtcblxuICAgIC8vIFZhbHVlXG4gICAgc3BlYy52YWwgPSB2YWw7XG5cbiAgICAvLyBJY29uXG4gICAgc3BlYy5pY29uID0gaWNvbjtcblxuICAgIC8vIEZlYXR1cmVkIG9yIEFkZGl0aW9uYWxcbiAgICBpZiAodmFsLmluY2x1ZGVzKCcqJykpIHtcbiAgICAgIHNwZWMudmFsID0gdmFsLnJlcGxhY2UoJyonLCAnJyk7XG4gICAgICBzcGVjLmZlYXR1cmVkID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3BlYy5mZWF0dXJlZCA9IGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gc3BlYztcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gdmFyaWF0aW9uU2xpY2UodmFyeVBhY2ssIGkpIHtcbiAgY29uc3QgcnYgPSB7XG4gICAgdmFyaWVzOiB2YXJ5UGFjay52YXJpZXNbaV0sXG4gICAgbGFiZWxzOiB2YXJ5UGFjay5sYWJlbHMsXG4gIH07XG4gIHJldHVybiBydjtcbn1cblxuZXhwb3J0IHsgZmluZFNwZWNCb3VuZHMsIGZpbmRTcGVjSWNvbnMsIGNvbXB1dGVDaGVja3N1bSwgZmlsdGVyRXhpc3RpbmcsIGNvbXBhcmVIYXNoZXNGb3JQYXlsb2FkLCBrZXlCeVBJQywgbGlua1ZhcmlhdGlvbnMsIGxpbmtQYWNrYWdlcywgdmVyaWZ5RmllbGRzLCB2ZXJpZnlGaWxlcywgYnVpbGRTcGVjLCB2YXJpYXRpb25TbGljZSB9O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==